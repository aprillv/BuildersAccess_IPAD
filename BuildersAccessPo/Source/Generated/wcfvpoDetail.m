/*
	wcfvpoDetail.h
	The implementation of properties and methods for the wcfvpoDetail object.
	Generated by SudzC.com
*/
#import "wcfvpoDetail.h"

@implementation wcfvpoDetail
	@synthesize Delivery = _Delivery;
	@synthesize Email = _Email;
	@synthesize IdReason = _IdReason;
	@synthesize IdVendor = _IdVendor;
	@synthesize Notes = _Notes;
	@synthesize Nreason = _Nreason;
	@synthesize Nvendor = _Nvendor;
	@synthesize Photo = _Photo;
	@synthesize Qty = _Qty;
	@synthesize Total = _Total;
	@synthesize Updateyn = _Updateyn;

	- (id) init
	{
		if(self = [super init])
		{
			self.Delivery = nil;
			self.Email = nil;
			self.IdReason = nil;
			self.IdVendor = nil;
			self.Notes = nil;
			self.Nreason = nil;
			self.Nvendor = nil;
			self.Photo = nil;
			self.Qty = nil;
			self.Total = nil;

		}
		return self;
	}

	+ (wcfvpoDetail*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (wcfvpoDetail*)[[[wcfvpoDetail alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Delivery = [Soap getNodeValue: node withName: @"Delivery"];
			self.Email = [Soap getNodeValue: node withName: @"Email"];
			self.IdReason = [Soap getNodeValue: node withName: @"IdReason"];
			self.IdVendor = [Soap getNodeValue: node withName: @"IdVendor"];
			self.Notes = [Soap getNodeValue: node withName: @"Notes"];
			self.Nreason = [Soap getNodeValue: node withName: @"Nreason"];
			self.Nvendor = [Soap getNodeValue: node withName: @"Nvendor"];
			self.Photo = [Soap getNodeValue: node withName: @"Photo"];
			self.Qty = [Soap getNodeValue: node withName: @"Qty"];
			self.Total = [Soap getNodeValue: node withName: @"Total"];
			self.Updateyn = [[Soap getNodeValue: node withName: @"Updateyn"] boolValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"vpoDetail"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Delivery != nil) [s appendFormat: @"<Delivery>%@</Delivery>", [[self.Delivery stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Email != nil) [s appendFormat: @"<Email>%@</Email>", [[self.Email stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.IdReason != nil) [s appendFormat: @"<IdReason>%@</IdReason>", [[self.IdReason stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.IdVendor != nil) [s appendFormat: @"<IdVendor>%@</IdVendor>", [[self.IdVendor stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Notes != nil) [s appendFormat: @"<Notes>%@</Notes>", [[self.Notes stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Nreason != nil) [s appendFormat: @"<Nreason>%@</Nreason>", [[self.Nreason stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Nvendor != nil) [s appendFormat: @"<Nvendor>%@</Nvendor>", [[self.Nvendor stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Photo != nil) [s appendFormat: @"<Photo>%@</Photo>", [[self.Photo stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Qty != nil) [s appendFormat: @"<Qty>%@</Qty>", [[self.Qty stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Total != nil) [s appendFormat: @"<Total>%@</Total>", [[self.Total stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<Updateyn>%@</Updateyn>", (self.Updateyn)?@"true":@"false"];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[wcfvpoDetail class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.Delivery != nil) { [self.Delivery release]; }
		if(self.Email != nil) { [self.Email release]; }
		if(self.IdReason != nil) { [self.IdReason release]; }
		if(self.IdVendor != nil) { [self.IdVendor release]; }
		if(self.Notes != nil) { [self.Notes release]; }
		if(self.Nreason != nil) { [self.Nreason release]; }
		if(self.Nvendor != nil) { [self.Nvendor release]; }
		if(self.Photo != nil) { [self.Photo release]; }
		if(self.Qty != nil) { [self.Qty release]; }
		if(self.Total != nil) { [self.Total release]; }
		[super dealloc];
	}

@end
