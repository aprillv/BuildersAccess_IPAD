/*
	wcfBustOutItem.h
	The implementation of properties and methods for the wcfBustOutItem object.
	Generated by SudzC.com
*/
#import "wcfBustOutItem.h"

@implementation wcfBustOutItem
	@synthesize Appr_by = _Appr_by;
	@synthesize Appr_date = _Appr_date;
	@synthesize Approve = _Approve;
	@synthesize Client = _Client;
	@synthesize ContractRefdate = _ContractRefdate;
	@synthesize Disapprove = _Disapprove;
	@synthesize Doc = _Doc;
	@synthesize IDCia = _IDCia;
	@synthesize Iddoc = _Iddoc;
	@synthesize Idnumber = _Idnumber;
	@synthesize Nonrefundable = _Nonrefundable;
	@synthesize Notes = _Notes;
	@synthesize Nproject = _Nproject;
	@synthesize PM1 = _PM1;
	@synthesize Refdate = _Refdate;
	@synthesize Sales1 = _Sales1;
	@synthesize Stage = _Stage;
	@synthesize Status = _Status;
	@synthesize Subdividion = _Subdividion;
	@synthesize idproject = _idproject;

	- (id) init
	{
		if(self = [super init])
		{
			self.Appr_by = nil;
			self.Appr_date = nil;
			self.Approve = nil;
			self.Client = nil;
			self.ContractRefdate = nil;
			self.Disapprove = nil;
			self.Doc = nil;
			self.IDCia = nil;
			self.Iddoc = nil;
			self.Idnumber = nil;
			self.Nonrefundable = nil;
			self.Notes = nil;
			self.Nproject = nil;
			self.PM1 = nil;
			self.Refdate = nil;
			self.Sales1 = nil;
			self.Stage = nil;
			self.Status = nil;
			self.Subdividion = nil;
			self.idproject = nil;

		}
		return self;
	}

	+ (wcfBustOutItem*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (wcfBustOutItem*)[[[wcfBustOutItem alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Appr_by = [Soap getNodeValue: node withName: @"Appr_by"];
			self.Appr_date = [Soap getNodeValue: node withName: @"Appr_date"];
			self.Approve = [Soap getNodeValue: node withName: @"Approve"];
			self.Client = [Soap getNodeValue: node withName: @"Client"];
			self.ContractRefdate = [Soap getNodeValue: node withName: @"ContractRefdate"];
			self.Disapprove = [Soap getNodeValue: node withName: @"Disapprove"];
			self.Doc = [Soap getNodeValue: node withName: @"Doc"];
			self.IDCia = [Soap getNodeValue: node withName: @"IDCia"];
			self.Iddoc = [Soap getNodeValue: node withName: @"Iddoc"];
			self.Idnumber = [Soap getNodeValue: node withName: @"Idnumber"];
			self.Nonrefundable = [Soap getNodeValue: node withName: @"Nonrefundable"];
			self.Notes = [Soap getNodeValue: node withName: @"Notes"];
			self.Nproject = [Soap getNodeValue: node withName: @"Nproject"];
			self.PM1 = [Soap getNodeValue: node withName: @"PM1"];
			self.Refdate = [Soap getNodeValue: node withName: @"Refdate"];
			self.Sales1 = [Soap getNodeValue: node withName: @"Sales1"];
			self.Stage = [Soap getNodeValue: node withName: @"Stage"];
			self.Status = [Soap getNodeValue: node withName: @"Status"];
			self.Subdividion = [Soap getNodeValue: node withName: @"Subdividion"];
			self.idproject = [Soap getNodeValue: node withName: @"idproject"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"BustOutItem"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Appr_by != nil) [s appendFormat: @"<Appr_by>%@</Appr_by>", [[self.Appr_by stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Appr_date != nil) [s appendFormat: @"<Appr_date>%@</Appr_date>", [[self.Appr_date stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Approve != nil) [s appendFormat: @"<Approve>%@</Approve>", [[self.Approve stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Client != nil) [s appendFormat: @"<Client>%@</Client>", [[self.Client stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ContractRefdate != nil) [s appendFormat: @"<ContractRefdate>%@</ContractRefdate>", [[self.ContractRefdate stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Disapprove != nil) [s appendFormat: @"<Disapprove>%@</Disapprove>", [[self.Disapprove stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Doc != nil) [s appendFormat: @"<Doc>%@</Doc>", [[self.Doc stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.IDCia != nil) [s appendFormat: @"<IDCia>%@</IDCia>", [[self.IDCia stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Iddoc != nil) [s appendFormat: @"<Iddoc>%@</Iddoc>", [[self.Iddoc stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Idnumber != nil) [s appendFormat: @"<Idnumber>%@</Idnumber>", [[self.Idnumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Nonrefundable != nil) [s appendFormat: @"<Nonrefundable>%@</Nonrefundable>", [[self.Nonrefundable stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Notes != nil) [s appendFormat: @"<Notes>%@</Notes>", [[self.Notes stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Nproject != nil) [s appendFormat: @"<Nproject>%@</Nproject>", [[self.Nproject stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.PM1 != nil) [s appendFormat: @"<PM1>%@</PM1>", [[self.PM1 stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Refdate != nil) [s appendFormat: @"<Refdate>%@</Refdate>", [[self.Refdate stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Sales1 != nil) [s appendFormat: @"<Sales1>%@</Sales1>", [[self.Sales1 stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Stage != nil) [s appendFormat: @"<Stage>%@</Stage>", [[self.Stage stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Status != nil) [s appendFormat: @"<Status>%@</Status>", [[self.Status stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Subdividion != nil) [s appendFormat: @"<Subdividion>%@</Subdividion>", [[self.Subdividion stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.idproject != nil) [s appendFormat: @"<idproject>%@</idproject>", [[self.idproject stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[wcfBustOutItem class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.Appr_by != nil) { [self.Appr_by release]; }
		if(self.Appr_date != nil) { [self.Appr_date release]; }
		if(self.Approve != nil) { [self.Approve release]; }
		if(self.Client != nil) { [self.Client release]; }
		if(self.ContractRefdate != nil) { [self.ContractRefdate release]; }
		if(self.Disapprove != nil) { [self.Disapprove release]; }
		if(self.Doc != nil) { [self.Doc release]; }
		if(self.IDCia != nil) { [self.IDCia release]; }
		if(self.Iddoc != nil) { [self.Iddoc release]; }
		if(self.Idnumber != nil) { [self.Idnumber release]; }
		if(self.Nonrefundable != nil) { [self.Nonrefundable release]; }
		if(self.Notes != nil) { [self.Notes release]; }
		if(self.Nproject != nil) { [self.Nproject release]; }
		if(self.PM1 != nil) { [self.PM1 release]; }
		if(self.Refdate != nil) { [self.Refdate release]; }
		if(self.Sales1 != nil) { [self.Sales1 release]; }
		if(self.Stage != nil) { [self.Stage release]; }
		if(self.Status != nil) { [self.Status release]; }
		if(self.Subdividion != nil) { [self.Subdividion release]; }
		if(self.idproject != nil) { [self.idproject release]; }
		[super dealloc];
	}

@end
