/*
	wcfStartPackItem.h
	The implementation of properties and methods for the wcfStartPackItem object.
	Generated by SudzC.com
*/
#import "wcfStartPackItem.h"

@implementation wcfStartPackItem
	@synthesize By = _By;
	@synthesize IDNumber = _IDNumber;
	@synthesize Item = _Item;
	@synthesize MValue = _MValue;
	@synthesize StartPack = _StartPack;
	@synthesize Type = _Type;
	@synthesize Upd = _Upd;
	@synthesize Updated = _Updated;
	@synthesize idproject = _idproject;
	@synthesize nproject = _nproject;

	- (id) init
	{
		if(self = [super init])
		{
			self.By = nil;
			self.IDNumber = nil;
			self.Item = nil;
			self.MValue = nil;
			self.StartPack = nil;
			self.Type = nil;
			self.Upd = nil;
			self.Updated = nil;
			self.idproject = nil;
			self.nproject = nil;

		}
		return self;
	}

	+ (wcfStartPackItem*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (wcfStartPackItem*)[[[wcfStartPackItem alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.By = [Soap getNodeValue: node withName: @"By"];
			self.IDNumber = [Soap getNodeValue: node withName: @"IDNumber"];
			self.Item = [Soap getNodeValue: node withName: @"Item"];
			self.MValue = [Soap getNodeValue: node withName: @"MValue"];
			self.StartPack = [Soap getNodeValue: node withName: @"StartPack"];
			self.Type = [Soap getNodeValue: node withName: @"Type"];
			self.Upd = [Soap getNodeValue: node withName: @"Upd"];
			self.Updated = [Soap getNodeValue: node withName: @"Updated"];
			self.idproject = [Soap getNodeValue: node withName: @"idproject"];
			self.nproject = [Soap getNodeValue: node withName: @"nproject"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"StartPackItem"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.By != nil) [s appendFormat: @"<By>%@</By>", [[self.By stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.IDNumber != nil) [s appendFormat: @"<IDNumber>%@</IDNumber>", [[self.IDNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Item != nil) [s appendFormat: @"<Item>%@</Item>", [[self.Item stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.MValue != nil) [s appendFormat: @"<MValue>%@</MValue>", [[self.MValue stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.StartPack != nil) [s appendFormat: @"<StartPack>%@</StartPack>", [[self.StartPack stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Type != nil) [s appendFormat: @"<Type>%@</Type>", [[self.Type stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Upd != nil) [s appendFormat: @"<Upd>%@</Upd>", [[self.Upd stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Updated != nil) [s appendFormat: @"<Updated>%@</Updated>", [[self.Updated stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.idproject != nil) [s appendFormat: @"<idproject>%@</idproject>", [[self.idproject stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.nproject != nil) [s appendFormat: @"<nproject>%@</nproject>", [[self.nproject stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[wcfStartPackItem class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.By != nil) { [self.By release]; }
		if(self.IDNumber != nil) { [self.IDNumber release]; }
		if(self.Item != nil) { [self.Item release]; }
		if(self.MValue != nil) { [self.MValue release]; }
		if(self.StartPack != nil) { [self.StartPack release]; }
		if(self.Type != nil) { [self.Type release]; }
		if(self.Upd != nil) { [self.Upd release]; }
		if(self.Updated != nil) { [self.Updated release]; }
		if(self.idproject != nil) { [self.idproject release]; }
		if(self.nproject != nil) { [self.nproject release]; }
		[super dealloc];
	}

@end
