/*
	wcfPODetail.h
	The implementation of properties and methods for the wcfPODetail object.
	Generated by SudzC.com
*/
#import "wcfPODetail.h"

#import "wcfArrayOfOrderDetail.h"
@implementation wcfPODetail
	@synthesize ApprovePayment = _ApprovePayment;
	@synthesize AssignVendor = _AssignVendor;
	@synthesize BudgetComparison = _BudgetComparison;
	@synthesize CanEmail = _CanEmail;
	@synthesize Ciaid = _Ciaid;
	@synthesize Ckdate = _Ckdate;
	@synthesize Cknumber = _Cknumber;
	@synthesize Date = _Date;
	@synthesize Delivery = _Delivery;
	@synthesize Disapprove = _Disapprove;
	@synthesize Doc = _Doc;
	@synthesize Documents = _Documents;
	@synthesize FileAdd = _FileAdd;
	@synthesize ForApprove = _ForApprove;
	@synthesize Hold = _Hold;
	@synthesize IdDoc = _IdDoc;
	@synthesize Idcostcode = _Idcostcode;
	@synthesize Idvendor = _Idvendor;
	@synthesize MTakeOff = _MTakeOff;
	@synthesize Nontaxable = _Nontaxable;
	@synthesize Nvendor = _Nvendor;
	@synthesize Oldvendoremail = _Oldvendoremail;
	@synthesize OrderDetailList = _OrderDetailList;
	@synthesize PartialPayment = _PartialPayment;
	@synthesize PrintCheck = _PrintCheck;
	@synthesize ProjectName = _ProjectName;
	@synthesize ProjectNumber = _ProjectNumber;
	@synthesize ReOpen = _ReOpen;
	@synthesize Reason = _Reason;
	@synthesize Release = _Release;
	@synthesize Shipto = _Shipto;
	@synthesize Status = _Status;
	@synthesize Tax = _Tax;
	@synthesize Taxable = _Taxable;
	@synthesize To = _To;
	@synthesize Total = _Total;
	@synthesize Void = _Void;

	- (id) init
	{
		if(self = [super init])
		{
			self.ApprovePayment = nil;
			self.AssignVendor = nil;
			self.BudgetComparison = nil;
			self.Ciaid = nil;
			self.Ckdate = nil;
			self.Cknumber = nil;
			self.Date = nil;
			self.Delivery = nil;
			self.Disapprove = nil;
			self.Doc = nil;
			self.ForApprove = nil;
			self.IdDoc = nil;
			self.Idcostcode = nil;
			self.Nontaxable = nil;
			self.Nvendor = nil;
			self.Oldvendoremail = nil;
			self.OrderDetailList = [[[NSMutableArray alloc] init] autorelease];
			self.PartialPayment = nil;
			self.PrintCheck = nil;
			self.ProjectName = nil;
			self.ProjectNumber = nil;
			self.ReOpen = nil;
			self.Reason = nil;
			self.Release = nil;
			self.Shipto = nil;
			self.Status = nil;
			self.Tax = nil;
			self.Taxable = nil;
			self.To = nil;
			self.Total = nil;
			self.Void = nil;

		}
		return self;
	}

	+ (wcfPODetail*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (wcfPODetail*)[[[wcfPODetail alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.ApprovePayment = [Soap getNodeValue: node withName: @"ApprovePayment"];
			self.AssignVendor = [Soap getNodeValue: node withName: @"AssignVendor"];
			self.BudgetComparison = [Soap getNodeValue: node withName: @"BudgetComparison"];
			self.CanEmail = [[Soap getNodeValue: node withName: @"CanEmail"] boolValue];
			self.Ciaid = [Soap getNodeValue: node withName: @"Ciaid"];
			self.Ckdate = [Soap getNodeValue: node withName: @"Ckdate"];
			self.Cknumber = [Soap getNodeValue: node withName: @"Cknumber"];
			self.Date = [Soap getNodeValue: node withName: @"Date"];
			self.Delivery = [Soap getNodeValue: node withName: @"Delivery"];
			self.Disapprove = [Soap getNodeValue: node withName: @"Disapprove"];
			self.Doc = [Soap getNodeValue: node withName: @"Doc"];
			self.Documents = [[Soap getNodeValue: node withName: @"Documents"] boolValue];
			self.FileAdd = [[Soap getNodeValue: node withName: @"FileAdd"] boolValue];
			self.ForApprove = [Soap getNodeValue: node withName: @"ForApprove"];
			self.Hold = [[Soap getNodeValue: node withName: @"Hold"] boolValue];
			self.IdDoc = [Soap getNodeValue: node withName: @"IdDoc"];
			self.Idcostcode = [Soap getNodeValue: node withName: @"Idcostcode"];
			self.Idvendor = [[Soap getNodeValue: node withName: @"Idvendor"] longLongValue];
			self.MTakeOff = [[Soap getNodeValue: node withName: @"MTakeOff"] boolValue];
			self.Nontaxable = [Soap getNodeValue: node withName: @"Nontaxable"];
			self.Nvendor = [Soap getNodeValue: node withName: @"Nvendor"];
			self.Oldvendoremail = [Soap getNodeValue: node withName: @"Oldvendoremail"];
			self.OrderDetailList = [[wcfArrayOfOrderDetail newWithNode: [Soap getNode: node withName: @"OrderDetailList"]] object];
			self.PartialPayment = [Soap getNodeValue: node withName: @"PartialPayment"];
			self.PrintCheck = [Soap getNodeValue: node withName: @"PrintCheck"];
			self.ProjectName = [Soap getNodeValue: node withName: @"ProjectName"];
			self.ProjectNumber = [Soap getNodeValue: node withName: @"ProjectNumber"];
			self.ReOpen = [Soap getNodeValue: node withName: @"ReOpen"];
			self.Reason = [Soap getNodeValue: node withName: @"Reason"];
			self.Release = [Soap getNodeValue: node withName: @"Release"];
			self.Shipto = [Soap getNodeValue: node withName: @"Shipto"];
			self.Status = [Soap getNodeValue: node withName: @"Status"];
			self.Tax = [Soap getNodeValue: node withName: @"Tax"];
			self.Taxable = [Soap getNodeValue: node withName: @"Taxable"];
			self.To = [Soap getNodeValue: node withName: @"To"];
			self.Total = [Soap getNodeValue: node withName: @"Total"];
			self.Void = [Soap getNodeValue: node withName: @"Void"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"PODetail"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.ApprovePayment != nil) [s appendFormat: @"<ApprovePayment>%@</ApprovePayment>", [[self.ApprovePayment stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.AssignVendor != nil) [s appendFormat: @"<AssignVendor>%@</AssignVendor>", [[self.AssignVendor stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.BudgetComparison != nil) [s appendFormat: @"<BudgetComparison>%@</BudgetComparison>", [[self.BudgetComparison stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<CanEmail>%@</CanEmail>", (self.CanEmail)?@"true":@"false"];
		if (self.Ciaid != nil) [s appendFormat: @"<Ciaid>%@</Ciaid>", [[self.Ciaid stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Ckdate != nil) [s appendFormat: @"<Ckdate>%@</Ckdate>", [[self.Ckdate stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Cknumber != nil) [s appendFormat: @"<Cknumber>%@</Cknumber>", [[self.Cknumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Date != nil) [s appendFormat: @"<Date>%@</Date>", [[self.Date stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Delivery != nil) [s appendFormat: @"<Delivery>%@</Delivery>", [[self.Delivery stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Disapprove != nil) [s appendFormat: @"<Disapprove>%@</Disapprove>", [[self.Disapprove stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Doc != nil) [s appendFormat: @"<Doc>%@</Doc>", [[self.Doc stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<Documents>%@</Documents>", (self.Documents)?@"true":@"false"];
		[s appendFormat: @"<FileAdd>%@</FileAdd>", (self.FileAdd)?@"true":@"false"];
		if (self.ForApprove != nil) [s appendFormat: @"<ForApprove>%@</ForApprove>", [[self.ForApprove stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<Hold>%@</Hold>", (self.Hold)?@"true":@"false"];
		if (self.IdDoc != nil) [s appendFormat: @"<IdDoc>%@</IdDoc>", [[self.IdDoc stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Idcostcode != nil) [s appendFormat: @"<Idcostcode>%@</Idcostcode>", [[self.Idcostcode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<Idvendor>%@</Idvendor>", [NSString stringWithFormat: @"%ld", self.Idvendor]];
		[s appendFormat: @"<MTakeOff>%@</MTakeOff>", (self.MTakeOff)?@"true":@"false"];
		if (self.Nontaxable != nil) [s appendFormat: @"<Nontaxable>%@</Nontaxable>", [[self.Nontaxable stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Nvendor != nil) [s appendFormat: @"<Nvendor>%@</Nvendor>", [[self.Nvendor stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Oldvendoremail != nil) [s appendFormat: @"<Oldvendoremail>%@</Oldvendoremail>", [[self.Oldvendoremail stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.OrderDetailList != nil && self.OrderDetailList.count > 0) {
			[s appendFormat: @"<OrderDetailList>%@</OrderDetailList>", [wcfArrayOfOrderDetail serialize: self.OrderDetailList]];
		} else {
			[s appendString: @"<OrderDetailList/>"];
		}
		if (self.PartialPayment != nil) [s appendFormat: @"<PartialPayment>%@</PartialPayment>", [[self.PartialPayment stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.PrintCheck != nil) [s appendFormat: @"<PrintCheck>%@</PrintCheck>", [[self.PrintCheck stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ProjectName != nil) [s appendFormat: @"<ProjectName>%@</ProjectName>", [[self.ProjectName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ProjectNumber != nil) [s appendFormat: @"<ProjectNumber>%@</ProjectNumber>", [[self.ProjectNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ReOpen != nil) [s appendFormat: @"<ReOpen>%@</ReOpen>", [[self.ReOpen stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Reason != nil) [s appendFormat: @"<Reason>%@</Reason>", [[self.Reason stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Release != nil) [s appendFormat: @"<Release>%@</Release>", [[self.Release stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Shipto != nil) [s appendFormat: @"<Shipto>%@</Shipto>", [[self.Shipto stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Status != nil) [s appendFormat: @"<Status>%@</Status>", [[self.Status stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Tax != nil) [s appendFormat: @"<Tax>%@</Tax>", [[self.Tax stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Taxable != nil) [s appendFormat: @"<Taxable>%@</Taxable>", [[self.Taxable stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.To != nil) [s appendFormat: @"<To>%@</To>", [[self.To stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Total != nil) [s appendFormat: @"<Total>%@</Total>", [[self.Total stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Void != nil) [s appendFormat: @"<Void>%@</Void>", [[self.Void stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[wcfPODetail class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.ApprovePayment != nil) { [self.ApprovePayment release]; }
		if(self.AssignVendor != nil) { [self.AssignVendor release]; }
		if(self.BudgetComparison != nil) { [self.BudgetComparison release]; }
		if(self.Ciaid != nil) { [self.Ciaid release]; }
		if(self.Ckdate != nil) { [self.Ckdate release]; }
		if(self.Cknumber != nil) { [self.Cknumber release]; }
		if(self.Date != nil) { [self.Date release]; }
		if(self.Delivery != nil) { [self.Delivery release]; }
		if(self.Disapprove != nil) { [self.Disapprove release]; }
		if(self.Doc != nil) { [self.Doc release]; }
		if(self.ForApprove != nil) { [self.ForApprove release]; }
		if(self.IdDoc != nil) { [self.IdDoc release]; }
		if(self.Idcostcode != nil) { [self.Idcostcode release]; }
		if(self.Nontaxable != nil) { [self.Nontaxable release]; }
		if(self.Nvendor != nil) { [self.Nvendor release]; }
		if(self.Oldvendoremail != nil) { [self.Oldvendoremail release]; }
		if(self.OrderDetailList != nil) { [self.OrderDetailList release]; }
		if(self.PartialPayment != nil) { [self.PartialPayment release]; }
		if(self.PrintCheck != nil) { [self.PrintCheck release]; }
		if(self.ProjectName != nil) { [self.ProjectName release]; }
		if(self.ProjectNumber != nil) { [self.ProjectNumber release]; }
		if(self.ReOpen != nil) { [self.ReOpen release]; }
		if(self.Reason != nil) { [self.Reason release]; }
		if(self.Release != nil) { [self.Release release]; }
		if(self.Shipto != nil) { [self.Shipto release]; }
		if(self.Status != nil) { [self.Status release]; }
		if(self.Tax != nil) { [self.Tax release]; }
		if(self.Taxable != nil) { [self.Taxable release]; }
		if(self.To != nil) { [self.To release]; }
		if(self.Total != nil) { [self.Total release]; }
		if(self.Void != nil) { [self.Void release]; }
		[super dealloc];
	}

@end
