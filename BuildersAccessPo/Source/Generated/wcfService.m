/*
	wcfService.m
	The implementation classes and methods for the Service web service.
	Generated by SudzC.com
*/

#import "wcfService.h"
				
#import "Soap.h"
	
#import "wcfArrayOfVendorContactItem.h"
#import "wcfArrayOfVendorAssemblyItem.h"
#import "wcfArrayOfProjectSchedule.h"
#import "wcfArrayOfQAInspect.h"
#import "wcfArrayOfRequestedPO2Item.h"
#import "wcfArrayOfRequestedPOListItem.h"
#import "wcfArrayOfCalendarQAbItem.h"
#import "wcfArrayOfQACalendarItem.h"
#import "wcfArrayOfBustOutListItem.h"
#import "wcfArrayOfVpoListItem.h"
#import "wcfArrayOfReasonListItem.h"
#import "wcfArrayOfSuggestedPriceListItem.h"
#import "wcfArrayOfStartPackItem.h"
#import "wcfArrayOfVendor.h"
#import "wcfArrayOfOrderDetail.h"
#import "wcfArrayOfPOListItem.h"
#import "wcfArrayOfCalendarItem.h"
#import "wcfArrayOfContractDepositItem.h"
#import "wcfArrayOfContractItem.h"
#import "wcfArrayOfCOOrderDetail.h"
#import "wcfArrayOfCOListItem.h"
#import "wcfArrayOfPhoneListItem.h"
#import "wcfArrayOfProjectFile.h"
#import "wcfArrayOfProjectListItem.h"
#import "wcfArrayOfKirbytileItem2.h"
#import "wcfArrayOfKirbytileItem.h"
#import "wcfArrayOfKeyValueItem.h"
#import "wcfArrayOfstring.h"
#import "wcfSuggestedPriceListItem.h"
#import "wcfStartPackItem.h"
#import "wcfProjectFile.h"
#import "wcfCalendarQA.h"
#import "wcfvpoDetail.h"
#import "wcfCalendarQAb.h"
#import "wcfRequestedPODetail.h"
#import "wcfProjectScheduleComplete.h"
#import "wcfReasonListItem.h"
#import "wcfKeyValueItem.h"
#import "wcfBustOutItem.h"
#import "wcfCalendarEntryItem.h"
#import "wcfCODetail.h"
#import "wcfVendorAssemblyItem.h"
#import "wcfQACalendarItem.h"
#import "wcfCOOrderDetail.h"
#import "wcfKirbytileItem.h"
#import "wcfPODetail.h"
#import "wcfVpoListItem.h"
#import "wcfContractDepositItem.h"
#import "wcfKirbytileItem2.h"
#import "wcfContractEntryItem.h"
#import "wcfQAInspect.h"
#import "wcfRequestedPOListItem.h"
#import "wcfCalendarQAbItem.h"
#import "wcfVendor.h"
#import "wcfProjectItem.h"
#import "wcfVendorContactItem.h"
#import "wcfInspectionqa.h"
#import "wcfUserProfileItem.h"
#import "wcfOrderDetail.h"
#import "wcfCalendarItem.h"
#import "wcfContractItem.h"
#import "wcfPhoneListItem.h"
#import "wcfProjectSchedule.h"
#import "wcfRequestedPO2Item.h"
#import "wcfBustOutListItem.h"
#import "wcfUserCOEmail.h"
#import "wcfCOListItem.h"
#import "wcfVendorInfo.h"
#import "wcfCalendarQAbItemDetail.h"
#import "wcfSuggestedPriceItem.h"
#import "wcfPOListItem.h"
#import "wcfProjectListItem.h"

/* Implementation of the service */
				
@implementation wcfService

	- (id) init
	{
		if(self = [super init])
		{
			self.serviceUrl = @"http://ws.buildersaccess.com/Service.svc";
			self.namespace = @"http://tempuri.org/";
			self.headers = nil;
			self.logging = NO;
		}
		return self;
	}
	
	- (id) initWithUsername: (NSString*) username andPassword: (NSString*) password {
		if(self = [super initWithUsername:username andPassword:password]) {
		}
		return self;
	}
	
	+ (wcfService*) service {
		return [wcfService serviceWithUsername:nil andPassword:nil];
	}
	
	+ (wcfService*) serviceWithUsername: (NSString*) username andPassword: (NSString*) password {
		return [[[wcfService alloc] initWithUsername:username andPassword:password] autorelease];
	}

		
	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetProjectPhotoFolder: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia projectid: (NSString*) projectid xtype: (int) xtype EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetProjectPhotoFolder: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia projectid: projectid xtype: xtype EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetProjectPhotoFolder: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia projectid: (NSString*) projectid xtype: (int) xtype EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: projectid forName: @"projectid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: xtype] forName: @"xtype"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetProjectPhotoFolder" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetProjectPhotoFolder" postData: _envelope deserializeTo: [[wcfArrayOfKeyValueItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xUploadPhotos: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xFolderid: (NSString*) xFolderid xFolder1id: (NSString*) xFolder1id xFolder2id: (NSString*) xFolder2id xFolder2Name: (NSString*) xFolder2Name fname: (NSString*) fname ftype: (NSString*) ftype ftags: (NSString*) ftags fileBase64String: (NSString*) fileBase64String EquipmentType: (NSString*) EquipmentType
	{
		return [self xUploadPhotos: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject: xidproject xFolderid: xFolderid xFolder1id: xFolder1id xFolder2id: xFolder2id xFolder2Name: xFolder2Name fname: fname ftype: ftype ftags: ftags fileBase64String: fileBase64String EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xUploadPhotos: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xFolderid: (NSString*) xFolderid xFolder1id: (NSString*) xFolder1id xFolder2id: (NSString*) xFolder2id xFolder2Name: (NSString*) xFolder2Name fname: (NSString*) fname ftype: (NSString*) ftype ftags: (NSString*) ftags fileBase64String: (NSString*) fileBase64String EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject forName: @"xidproject"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xFolderid forName: @"xFolderid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xFolder1id forName: @"xFolder1id"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xFolder2id forName: @"xFolder2id"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xFolder2Name forName: @"xFolder2Name"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: fname forName: @"fname"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: ftype forName: @"ftype"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: ftags forName: @"ftags"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: fileBase64String forName: @"fileBase64String"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xUploadPhotos" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xUploadPhotos" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetSelectionCalendarCnt: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetSelectionCalendarCnt: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetSelectionCalendarCnt: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetSelectionCalendarCnt" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetSelectionCalendarCnt" postData: _envelope deserializeTo: [[wcfArrayOfstring alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetSelectionCalendarList: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia tdate: (NSString*) tdate EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetSelectionCalendarList: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia tdate: tdate EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetSelectionCalendarList: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia tdate: (NSString*) tdate EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: tdate forName: @"tdate"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetSelectionCalendarList" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetSelectionCalendarList" postData: _envelope deserializeTo: [[wcfArrayOfKirbytileItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns wcfCalendarEntryItem*.  */
	- (SoapRequest*) xGetSelectionCalendarEntry: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetSelectionCalendarEntry: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnumber: xidnumber EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetSelectionCalendarEntry: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnumber forName: @"xidnumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetSelectionCalendarEntry" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetSelectionCalendarEntry" postData: _envelope deserializeTo: [[wcfCalendarEntryItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xSaveSelectionCalendar: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia calendarData: (NSString*) calendarData xidnumber: (NSString*) xidnumber EquipmentType: (NSString*) EquipmentType
	{
		return [self xSaveSelectionCalendar: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia calendarData: calendarData xidnumber: xidnumber EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xSaveSelectionCalendar: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia calendarData: (NSString*) calendarData xidnumber: (NSString*) xidnumber EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: calendarData forName: @"calendarData"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnumber forName: @"xidnumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xSaveSelectionCalendar" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xSaveSelectionCalendar" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xDeleteSelectionCalendar: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber EquipmentType: (NSString*) EquipmentType
	{
		return [self xDeleteSelectionCalendar: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnumber: xidnumber EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xDeleteSelectionCalendar: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnumber forName: @"xidnumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xDeleteSelectionCalendar" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xDeleteSelectionCalendar" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetSelectionCalendarListPad: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia tdate: (NSString*) tdate EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetSelectionCalendarListPad: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia tdate: tdate EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetSelectionCalendarListPad: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia tdate: (NSString*) tdate EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: tdate forName: @"tdate"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetSelectionCalendarListPad" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetSelectionCalendarListPad" postData: _envelope deserializeTo: [[wcfArrayOfKirbytileItem2 alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetKirbyTitleListPad: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia tdate: (NSString*) tdate EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetKirbyTitleListPad: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia tdate: tdate EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetKirbyTitleListPad: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia tdate: (NSString*) tdate EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: tdate forName: @"tdate"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetKirbyTitleListPad" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetKirbyTitleListPad" postData: _envelope deserializeTo: [[wcfArrayOfKirbytileItem2 alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetQACalendarListPad: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia tdate: (NSString*) tdate EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetQACalendarListPad: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia tdate: tdate EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetQACalendarListPad: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia tdate: (NSString*) tdate EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: tdate forName: @"tdate"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetQACalendarListPad" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetQACalendarListPad" postData: _envelope deserializeTo: [[wcfArrayOfKirbytileItem2 alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns wcfKeyValueItem*.  */
	- (SoapRequest*) xCheckLogin: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword EquipmentType: (NSString*) EquipmentType
	{
		return [self xCheckLogin: handler action: nil xemail: xemail xpassword: xpassword EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xCheckLogin: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xCheckLogin" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xCheckLogin" postData: _envelope deserializeTo: [[wcfKeyValueItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetCiaList: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetCiaList: handler action: nil xemail: xemail xpassword: xpassword EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetCiaList: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetCiaList" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetCiaList" postData: _envelope deserializeTo: [[wcfArrayOfKeyValueItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xSearchProject: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xtype: (int) xtype currentPage: (int) currentPage EquipmentType: (NSString*) EquipmentType
	{
		return [self xSearchProject: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xtype: xtype currentPage: currentPage EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xSearchProject: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xtype: (int) xtype currentPage: (int) currentPage EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: xtype] forName: @"xtype"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: currentPage] forName: @"currentPage"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xSearchProject" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xSearchProject" postData: _envelope deserializeTo: [[wcfArrayOfProjectListItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns wcfProjectItem*.  */
	- (SoapRequest*) xGetProject: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia projectid: (NSString*) projectid xtype: (int) xtype EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetProject: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia projectid: projectid xtype: xtype EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetProject: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia projectid: (NSString*) projectid xtype: (int) xtype EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: projectid forName: @"projectid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: xtype] forName: @"xtype"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetProject" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetProject" postData: _envelope deserializeTo: [[wcfProjectItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetProjectFiles: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia projectid: (NSString*) projectid EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetProjectFiles: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia projectid: projectid EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetProjectFiles: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia projectid: (NSString*) projectid EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: projectid forName: @"projectid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetProjectFiles" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetProjectFiles" postData: _envelope deserializeTo: [[wcfArrayOfProjectFile alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns wcfUserProfileItem*.  */
	- (SoapRequest*) xGetUserProfile: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetUserProfile: handler action: nil xemail: xemail xpassword: xpassword EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetUserProfile: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetUserProfile" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetUserProfile" postData: _envelope deserializeTo: [[wcfUserProfileItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns int.  */
	- (SoapRequest*) xUpdateUserProfile: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword title: (NSString*) title name: (NSString*) name fax: (NSString*) fax mobile: (NSString*) mobile phone: (NSString*) phone photoBase64String: (NSString*) photoBase64String EquipmentType: (NSString*) EquipmentType
	{
		return [self xUpdateUserProfile: handler action: nil xemail: xemail xpassword: xpassword title: title name: name fax: fax mobile: mobile phone: phone photoBase64String: photoBase64String EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xUpdateUserProfile: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword title: (NSString*) title name: (NSString*) name fax: (NSString*) fax mobile: (NSString*) mobile phone: (NSString*) phone photoBase64String: (NSString*) photoBase64String EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: title forName: @"title"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: name forName: @"name"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: fax forName: @"fax"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: mobile forName: @"mobile"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: phone forName: @"phone"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: photoBase64String forName: @"photoBase64String"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xUpdateUserProfile" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xUpdateUserProfile" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns int.  */
	- (SoapRequest*) xUpdateUserProfileWithoutPhoto: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword title: (NSString*) title name: (NSString*) name fax: (NSString*) fax mobile: (NSString*) mobile phone: (NSString*) phone EquipmentType: (NSString*) EquipmentType
	{
		return [self xUpdateUserProfileWithoutPhoto: handler action: nil xemail: xemail xpassword: xpassword title: title name: name fax: fax mobile: mobile phone: phone EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xUpdateUserProfileWithoutPhoto: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword title: (NSString*) title name: (NSString*) name fax: (NSString*) fax mobile: (NSString*) mobile phone: (NSString*) phone EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: title forName: @"title"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: name forName: @"name"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: fax forName: @"fax"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: mobile forName: @"mobile"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: phone forName: @"phone"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xUpdateUserProfileWithoutPhoto" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xUpdateUserProfileWithoutPhoto" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetPhoneList: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetPhoneList: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetPhoneList: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetPhoneList" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetPhoneList" postData: _envelope deserializeTo: [[wcfArrayOfPhoneListItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns wcfPhoneListItem*.  */
	- (SoapRequest*) xGetPhoneListEntry: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xemail1: (NSString*) xemail1 EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetPhoneListEntry: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xemail1: xemail1 EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetPhoneListEntry: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xemail1: (NSString*) xemail1 EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail1 forName: @"xemail1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetPhoneListEntry" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetPhoneListEntry" postData: _envelope deserializeTo: [[wcfPhoneListItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetMenuForApprove: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword mastercompany: (NSString*) mastercompany EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetMenuForApprove: handler action: nil xemail: xemail xpassword: xpassword mastercompany: mastercompany EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetMenuForApprove: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword mastercompany: (NSString*) mastercompany EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: mastercompany forName: @"mastercompany"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetMenuForApprove" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetMenuForApprove" postData: _envelope deserializeTo: [[wcfArrayOfKeyValueItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetMasterCia: (id <SoapDelegate>) handler xemail: (NSString*) xemail password: (NSString*) password EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetMasterCia: handler action: nil xemail: xemail password: password EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetMasterCia: (id) _target action: (SEL) _action xemail: (NSString*) xemail password: (NSString*) password EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetMasterCia" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetMasterCia" postData: _envelope deserializeTo: [[wcfArrayOfKeyValueItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetCOListForApprove: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetCOListForApprove: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetCOListForApprove: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetCOListForApprove" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetCOListForApprove" postData: _envelope deserializeTo: [[wcfArrayOfCOListItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns wcfCODetail*.  */
	- (SoapRequest*) xGetCODetailForApprove: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xcoid: (NSString*) xcoid EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetCODetailForApprove: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xcoid: xcoid EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetCODetailForApprove: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xcoid: (NSString*) xcoid EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xcoid forName: @"xcoid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetCODetailForApprove" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetCODetailForApprove" postData: _envelope deserializeTo: [[wcfCODetail alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns int.  */
	- (SoapRequest*) xUpdateUserChangeOrder: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xcoid: (NSString*) xcoid xtype: (NSString*) xtype toemail: (NSString*) toemail msg: (NSString*) msg EquipmentType: (NSString*) EquipmentType
	{
		return [self xUpdateUserChangeOrder: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xcoid: xcoid xtype: xtype toemail: toemail msg: msg EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xUpdateUserChangeOrder: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xcoid: (NSString*) xcoid xtype: (NSString*) xtype toemail: (NSString*) toemail msg: (NSString*) msg EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xcoid forName: @"xcoid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xtype forName: @"xtype"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: toemail forName: @"toemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: msg forName: @"msg"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xUpdateUserChangeOrder" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xUpdateUserChangeOrder" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns wcfUserCOEmail*.  */
	- (SoapRequest*) xChangeOrderGetEmail: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xcoid: (NSString*) xcoid xtype: (NSString*) xtype
	{
		return [self xChangeOrderGetEmail: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xcoid: xcoid xtype: xtype];
	}

	- (SoapRequest*) xChangeOrderGetEmail: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xcoid: (NSString*) xcoid xtype: (NSString*) xtype
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xcoid forName: @"xcoid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xtype forName: @"xtype"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xChangeOrderGetEmail" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xChangeOrderGetEmail" postData: _envelope deserializeTo: [[wcfUserCOEmail alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetContractForApprove: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetContractForApprove: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetContractForApprove: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetContractForApprove" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetContractForApprove" postData: _envelope deserializeTo: [[wcfArrayOfContractItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns wcfContractEntryItem*.  */
	- (SoapRequest*) xGetContractEntry: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia contractid: (NSString*) contractid EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetContractEntry: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia contractid: contractid EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetContractEntry: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia contractid: (NSString*) contractid EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: contractid forName: @"contractid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetContractEntry" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetContractEntry" postData: _envelope deserializeTo: [[wcfContractEntryItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns wcfKeyValueItem*.  */
	- (SoapRequest*) xGetContractApproveEmailTo: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia contractid: (NSString*) contractid
	{
		return [self xGetContractApproveEmailTo: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia contractid: contractid];
	}

	- (SoapRequest*) xGetContractApproveEmailTo: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia contractid: (NSString*) contractid
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: contractid forName: @"contractid"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetContractApproveEmailTo" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetContractApproveEmailTo" postData: _envelope deserializeTo: [[wcfKeyValueItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns int.  */
	- (SoapRequest*) xUpdateContract: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia contractid: (NSString*) contractid xtype: (NSString*) xtype toemail: (NSString*) toemail msg: (NSString*) msg EquipmentType: (NSString*) EquipmentType
	{
		return [self xUpdateContract: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia contractid: contractid xtype: xtype toemail: toemail msg: msg EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xUpdateContract: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia contractid: (NSString*) contractid xtype: (NSString*) xtype toemail: (NSString*) toemail msg: (NSString*) msg EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: contractid forName: @"contractid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xtype forName: @"xtype"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: toemail forName: @"toemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: msg forName: @"msg"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xUpdateContract" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xUpdateContract" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetCalendarBuilderForApprove: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword mastercompany: (NSString*) mastercompany EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetCalendarBuilderForApprove: handler action: nil xemail: xemail xpassword: xpassword mastercompany: mastercompany EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetCalendarBuilderForApprove: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword mastercompany: (NSString*) mastercompany EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: mastercompany forName: @"mastercompany"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetCalendarBuilderForApprove" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetCalendarBuilderForApprove" postData: _envelope deserializeTo: [[wcfArrayOfCalendarItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetCalendarBuyerForApprove: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword mastercompany: (NSString*) mastercompany EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetCalendarBuyerForApprove: handler action: nil xemail: xemail xpassword: xpassword mastercompany: mastercompany EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetCalendarBuyerForApprove: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword mastercompany: (NSString*) mastercompany EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: mastercompany forName: @"mastercompany"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetCalendarBuyerForApprove" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetCalendarBuyerForApprove" postData: _envelope deserializeTo: [[wcfArrayOfCalendarItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns wcfCalendarEntryItem*.  */
	- (SoapRequest*) xGetCalendarEntry: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetCalendarEntry: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnumber: xidnumber EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetCalendarEntry: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnumber forName: @"xidnumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetCalendarEntry" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetCalendarEntry" postData: _envelope deserializeTo: [[wcfCalendarEntryItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns int.  */
	- (SoapRequest*) xUpdateCalendarApprove: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia calendarData: (NSString*) calendarData xidnumber: (NSString*) xidnumber EquipmentType: (NSString*) EquipmentType
	{
		return [self xUpdateCalendarApprove: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia calendarData: calendarData xidnumber: xidnumber EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xUpdateCalendarApprove: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia calendarData: (NSString*) calendarData xidnumber: (NSString*) xidnumber EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: calendarData forName: @"calendarData"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnumber forName: @"xidnumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xUpdateCalendarApprove" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xUpdateCalendarApprove" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns int.  */
	- (SoapRequest*) xUpdateCalendarDisApprove: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia calendarData: (NSString*) calendarData xidnumber: (NSString*) xidnumber EquipmentType: (NSString*) EquipmentType
	{
		return [self xUpdateCalendarDisApprove: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia calendarData: calendarData xidnumber: xidnumber EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xUpdateCalendarDisApprove: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia calendarData: (NSString*) calendarData xidnumber: (NSString*) xidnumber EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: calendarData forName: @"calendarData"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnumber forName: @"xidnumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xUpdateCalendarDisApprove" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xUpdateCalendarDisApprove" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetMenuPOForApprove: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword mastercompany: (NSString*) mastercompany xtype: (NSString*) xtype EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetMenuPOForApprove: handler action: nil xemail: xemail xpassword: xpassword mastercompany: mastercompany xtype: xtype EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetMenuPOForApprove: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword mastercompany: (NSString*) mastercompany xtype: (NSString*) xtype EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: mastercompany forName: @"mastercompany"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xtype forName: @"xtype"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetMenuPOForApprove" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetMenuPOForApprove" postData: _envelope deserializeTo: [[wcfArrayOfKeyValueItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetPOForApproveList: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xtype: (NSString*) xtype currentPage: (int) currentPage EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetPOForApproveList: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xtype: xtype currentPage: currentPage EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetPOForApproveList: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xtype: (NSString*) xtype currentPage: (int) currentPage EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xtype forName: @"xtype"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: currentPage] forName: @"currentPage"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetPOForApproveList" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetPOForApproveList" postData: _envelope deserializeTo: [[wcfArrayOfPOListItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns BOOL.  */
	- (SoapRequest*) xAddUserLog: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia logscreen: (NSString*) logscreen keyname: (NSString*) keyname filename: (NSString*) filename EquipmentType: (NSString*) EquipmentType
	{
		return [self xAddUserLog: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia logscreen: logscreen keyname: keyname filename: filename EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xAddUserLog: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia logscreen: (NSString*) logscreen keyname: (NSString*) keyname filename: (NSString*) filename EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: logscreen forName: @"logscreen"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: keyname forName: @"keyname"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: filename forName: @"filename"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xAddUserLog" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xAddUserLog" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xSendGetPasswordMail: (id <SoapDelegate>) handler xemail: (NSString*) xemail EquipmentType: (NSString*) EquipmentType
	{
		return [self xSendGetPasswordMail: handler action: nil xemail: xemail EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xSendGetPasswordMail: (id) _target action: (SEL) _action xemail: (NSString*) xemail EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xSendGetPasswordMail" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xSendGetPasswordMail" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns wcfPODetail*.  */
	- (SoapRequest*) xGetPODetail: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xpoid: (NSString*) xpoid xcode: (NSString*) xcode EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetPODetail: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xpoid: xpoid xcode: xcode EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetPODetail: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xpoid: (NSString*) xpoid xcode: (NSString*) xcode EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpoid forName: @"xpoid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xcode forName: @"xcode"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetPODetail" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetPODetail" postData: _envelope deserializeTo: [[wcfPODetail alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns wcfPODetail*.  */
	- (SoapRequest*) xGetPODetailForSubmit: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xpoid: (NSString*) xpoid xvendorid: (NSString*) xvendorid xcode: (NSString*) xcode EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetPODetailForSubmit: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xpoid: xpoid xvendorid: xvendorid xcode: xcode EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetPODetailForSubmit: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xpoid: (NSString*) xpoid xvendorid: (NSString*) xvendorid xcode: (NSString*) xcode EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpoid forName: @"xpoid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xvendorid forName: @"xvendorid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xcode forName: @"xcode"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetPODetailForSubmit" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetPODetailForSubmit" postData: _envelope deserializeTo: [[wcfPODetail alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetVendors: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidcostcode: (NSString*) xidcostcode projectid: (NSString*) projectid currentPage: (int) currentPage EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetVendors: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidcostcode: xidcostcode projectid: projectid currentPage: currentPage EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetVendors: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidcostcode: (NSString*) xidcostcode projectid: (NSString*) projectid currentPage: (int) currentPage EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcostcode forName: @"xidcostcode"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: projectid forName: @"projectid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: currentPage] forName: @"currentPage"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetVendors" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetVendors" postData: _envelope deserializeTo: [[wcfArrayOfVendor alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetEmailList: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia idvendor: (NSString*) idvendor
	{
		return [self xGetEmailList: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia idvendor: idvendor];
	}

	- (SoapRequest*) xGetEmailList: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia idvendor: (NSString*) idvendor
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: idvendor forName: @"idvendor"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetEmailList" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetEmailList" postData: _envelope deserializeTo: [[wcfArrayOfstring alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xGetEmailListDisapprove: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia poid: (NSString*) poid
	{
		return [self xGetEmailListDisapprove: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia poid: poid];
	}

	- (SoapRequest*) xGetEmailListDisapprove: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia poid: (NSString*) poid
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: poid forName: @"poid"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetEmailListDisapprove" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetEmailListDisapprove" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns int.  */
	- (SoapRequest*) xUpdateUserPurchaseOrder: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xpoid: (NSString*) xpoid xtype: (NSString*) xtype update: (NSString*) update vendorid: (NSString*) vendorid delivery: (NSString*) delivery xlgsel: (NSString*) xlgsel xcode: (NSString*) xcode EquipmentType: (NSString*) EquipmentType
	{
		return [self xUpdateUserPurchaseOrder: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xpoid: xpoid xtype: xtype update: update vendorid: vendorid delivery: delivery xlgsel: xlgsel xcode: xcode EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xUpdateUserPurchaseOrder: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xpoid: (NSString*) xpoid xtype: (NSString*) xtype update: (NSString*) update vendorid: (NSString*) vendorid delivery: (NSString*) delivery xlgsel: (NSString*) xlgsel xcode: (NSString*) xcode EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpoid forName: @"xpoid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xtype forName: @"xtype"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: update forName: @"update"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: vendorid forName: @"vendorid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: delivery forName: @"delivery"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xlgsel forName: @"xlgsel"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xcode forName: @"xcode"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xUpdateUserPurchaseOrder" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xUpdateUserPurchaseOrder" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns BOOL.  */
	- (SoapRequest*) xSendEmail: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xpoid: (NSString*) xpoid xto: (NSString*) xto oldvendoremail: (NSString*) oldvendoremail xmsg: (NSString*) xmsg EquipmentType: (NSString*) EquipmentType xtype: (NSString*) xtype
	{
		return [self xSendEmail: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xpoid: xpoid xto: xto oldvendoremail: oldvendoremail xmsg: xmsg EquipmentType: EquipmentType xtype: xtype];
	}

	- (SoapRequest*) xSendEmail: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xpoid: (NSString*) xpoid xto: (NSString*) xto oldvendoremail: (NSString*) oldvendoremail xmsg: (NSString*) xmsg EquipmentType: (NSString*) EquipmentType xtype: (NSString*) xtype
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpoid forName: @"xpoid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xto forName: @"xto"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: oldvendoremail forName: @"oldvendoremail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xmsg forName: @"xmsg"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xtype forName: @"xtype"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xSendEmail" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xSendEmail" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns BOOL.  */
	- (SoapRequest*) xSendMessage: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xpoid: (NSString*) xpoid oldvendoremail: (NSString*) oldvendoremail xmsg: (NSString*) xmsg EquipmentType: (NSString*) EquipmentType xtype: (NSString*) xtype
	{
		return [self xSendMessage: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xpoid: xpoid oldvendoremail: oldvendoremail xmsg: xmsg EquipmentType: EquipmentType xtype: xtype];
	}

	- (SoapRequest*) xSendMessage: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xpoid: (NSString*) xpoid oldvendoremail: (NSString*) oldvendoremail xmsg: (NSString*) xmsg EquipmentType: (NSString*) EquipmentType xtype: (NSString*) xtype
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpoid forName: @"xpoid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: oldvendoremail forName: @"oldvendoremail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xmsg forName: @"xmsg"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xtype forName: @"xtype"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xSendMessage" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xSendMessage" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetMenuCOForApprove: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword mastercompany: (NSString*) mastercompany EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetMenuCOForApprove: handler action: nil xemail: xemail xpassword: xpassword mastercompany: mastercompany EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetMenuCOForApprove: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword mastercompany: (NSString*) mastercompany EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: mastercompany forName: @"mastercompany"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetMenuCOForApprove" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetMenuCOForApprove" postData: _envelope deserializeTo: [[wcfArrayOfKeyValueItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetMenuContractForApprove: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword mastercompany: (NSString*) mastercompany EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetMenuContractForApprove: handler action: nil xemail: xemail xpassword: xpassword mastercompany: mastercompany EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetMenuContractForApprove: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword mastercompany: (NSString*) mastercompany EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: mastercompany forName: @"mastercompany"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetMenuContractForApprove" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetMenuContractForApprove" postData: _envelope deserializeTo: [[wcfArrayOfKeyValueItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xisupdate_iphone: (id <SoapDelegate>) handler version: (NSString*) version
	{
		return [self xisupdate_iphone: handler action: nil version: version];
	}

	- (SoapRequest*) xisupdate_iphone: (id) _target action: (SEL) _action version: (NSString*) version
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: version forName: @"version"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xisupdate_iphone" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xisupdate_iphone" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xisupdate_ipad: (id <SoapDelegate>) handler version: (NSString*) version
	{
		return [self xisupdate_ipad: handler action: nil version: version];
	}

	- (SoapRequest*) xisupdate_ipad: (id) _target action: (SEL) _action version: (NSString*) version
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: version forName: @"version"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xisupdate_ipad" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xisupdate_ipad" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xisupdate_tablet: (id <SoapDelegate>) handler version: (NSString*) version
	{
		return [self xisupdate_tablet: handler action: nil version: version];
	}

	- (SoapRequest*) xisupdate_tablet: (id) _target action: (SEL) _action version: (NSString*) version
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: version forName: @"version"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xisupdate_tablet" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xisupdate_tablet" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xisupdate_android: (id <SoapDelegate>) handler version: (NSString*) version
	{
		return [self xisupdate_android: handler action: nil version: version];
	}

	- (SoapRequest*) xisupdate_android: (id) _target action: (SEL) _action version: (NSString*) version
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: version forName: @"version"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xisupdate_android" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xisupdate_android" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetStartPackList: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia projectid: (NSString*) projectid EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetStartPackList: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia projectid: projectid EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetStartPackList: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia projectid: (NSString*) projectid EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: projectid forName: @"projectid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetStartPackList" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetStartPackList" postData: _envelope deserializeTo: [[wcfArrayOfStartPackItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetPO93: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia projectid: (NSString*) projectid idvendor: (NSString*) idvendor EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetPO93: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia projectid: projectid idvendor: idvendor EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetPO93: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia projectid: (NSString*) projectid idvendor: (NSString*) idvendor EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: projectid forName: @"projectid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: idvendor forName: @"idvendor"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetPO93" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetPO93" postData: _envelope deserializeTo: [[wcfArrayOfKeyValueItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetPO93list: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia projectid: (NSString*) projectid idvendor: (NSString*) idvendor xstatus: (NSString*) xstatus currentPage: (int) currentPage EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetPO93list: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia projectid: projectid idvendor: idvendor xstatus: xstatus currentPage: currentPage EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetPO93list: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia projectid: (NSString*) projectid idvendor: (NSString*) idvendor xstatus: (NSString*) xstatus currentPage: (int) currentPage EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: projectid forName: @"projectid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: idvendor forName: @"idvendor"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xstatus forName: @"xstatus"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: currentPage] forName: @"currentPage"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetPO93list" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetPO93list" postData: _envelope deserializeTo: [[wcfArrayOfPOListItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetSuggestedPricelistForApprove: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword mastercompany: (NSString*) mastercompany EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetSuggestedPricelistForApprove: handler action: nil xemail: xemail xpassword: xpassword mastercompany: mastercompany EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetSuggestedPricelistForApprove: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword mastercompany: (NSString*) mastercompany EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: mastercompany forName: @"mastercompany"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetSuggestedPricelistForApprove" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetSuggestedPricelistForApprove" postData: _envelope deserializeTo: [[wcfArrayOfSuggestedPriceListItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetSuggestedPricelist: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia projectid: (NSString*) projectid currentPage: (int) currentPage EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetSuggestedPricelist: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia projectid: projectid currentPage: currentPage EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetSuggestedPricelist: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia projectid: (NSString*) projectid currentPage: (int) currentPage EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: projectid forName: @"projectid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: currentPage] forName: @"currentPage"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetSuggestedPricelist" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetSuggestedPricelist" postData: _envelope deserializeTo: [[wcfArrayOfSuggestedPriceListItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns wcfSuggestedPriceItem*.  */
	- (SoapRequest*) xGetSuggestedPrice: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject
	{
		return [self xGetSuggestedPrice: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject: xidproject];
	}

	- (SoapRequest*) xGetSuggestedPrice: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject forName: @"xidproject"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetSuggestedPrice" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetSuggestedPrice" postData: _envelope deserializeTo: [[wcfSuggestedPriceItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns wcfSuggestedPriceItem*.  */
	- (SoapRequest*) xGetSuggestedPriceForApprove: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber
	{
		return [self xGetSuggestedPriceForApprove: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnumber: xidnumber];
	}

	- (SoapRequest*) xGetSuggestedPriceForApprove: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnumber forName: @"xidnumber"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetSuggestedPriceForApprove" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetSuggestedPriceForApprove" postData: _envelope deserializeTo: [[wcfSuggestedPriceItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns wcfKeyValueItem*.  */
	- (SoapRequest*) xSubmitSuggestPrice: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia projectid: (NSString*) projectid suggestedPrice: (NSString*) suggestedPrice sqft: (NSString*) sqft comment: (NSString*) comment toemail: (NSString*) toemail EquipmentType: (NSString*) EquipmentType
	{
		return [self xSubmitSuggestPrice: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia projectid: projectid suggestedPrice: suggestedPrice sqft: sqft comment: comment toemail: toemail EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xSubmitSuggestPrice: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia projectid: (NSString*) projectid suggestedPrice: (NSString*) suggestedPrice sqft: (NSString*) sqft comment: (NSString*) comment toemail: (NSString*) toemail EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: projectid forName: @"projectid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: suggestedPrice forName: @"suggestedPrice"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: sqft forName: @"sqft"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: comment forName: @"comment"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: toemail forName: @"toemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xSubmitSuggestPrice" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xSubmitSuggestPrice" postData: _envelope deserializeTo: [[wcfKeyValueItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xFoundForApprove: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject
	{
		return [self xFoundForApprove: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject: xidproject];
	}

	- (SoapRequest*) xFoundForApprove: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject forName: @"xidproject"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xFoundForApprove" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xFoundForApprove" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns wcfKeyValueItem*.  */
	- (SoapRequest*) xCheckApproveSuggest: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xsqft: (NSString*) xsqft xsuggestprice: (NSString*) xsuggestprice
	{
		return [self xCheckApproveSuggest: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject: xidproject xsqft: xsqft xsuggestprice: xsuggestprice];
	}

	- (SoapRequest*) xCheckApproveSuggest: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xsqft: (NSString*) xsqft xsuggestprice: (NSString*) xsuggestprice
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject forName: @"xidproject"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xsqft forName: @"xsqft"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xsuggestprice forName: @"xsuggestprice"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xCheckApproveSuggest" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xCheckApproveSuggest" postData: _envelope deserializeTo: [[wcfKeyValueItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xApproveSuggest: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber xidproject: (NSString*) xidproject xsqft: (NSString*) xsqft xsuggestprice: (NSString*) xsuggestprice EquipmentType: (NSString*) EquipmentType
	{
		return [self xApproveSuggest: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnumber: xidnumber xidproject: xidproject xsqft: xsqft xsuggestprice: xsuggestprice EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xApproveSuggest: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber xidproject: (NSString*) xidproject xsqft: (NSString*) xsqft xsuggestprice: (NSString*) xsuggestprice EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnumber forName: @"xidnumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject forName: @"xidproject"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xsqft forName: @"xsqft"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xsuggestprice forName: @"xsuggestprice"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xApproveSuggest" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xApproveSuggest" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns wcfKeyValueItem*.  */
	- (SoapRequest*) xCheckDisApproveSuggest: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xsqft: (NSString*) xsqft xsuggestprice: (NSString*) xsuggestprice
	{
		return [self xCheckDisApproveSuggest: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject: xidproject xsqft: xsqft xsuggestprice: xsuggestprice];
	}

	- (SoapRequest*) xCheckDisApproveSuggest: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xsqft: (NSString*) xsqft xsuggestprice: (NSString*) xsuggestprice
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject forName: @"xidproject"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xsqft forName: @"xsqft"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xsuggestprice forName: @"xsuggestprice"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xCheckDisApproveSuggest" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xCheckDisApproveSuggest" postData: _envelope deserializeTo: [[wcfKeyValueItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xDisApproveSuggest: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber xidproject: (NSString*) xidproject xsqft: (NSString*) xsqft xsuggestprice: (NSString*) xsuggestprice xcounterprice: (NSString*) xcounterprice xtext: (NSString*) xtext EquipmentType: (NSString*) EquipmentType
	{
		return [self xDisApproveSuggest: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnumber: xidnumber xidproject: xidproject xsqft: xsqft xsuggestprice: xsuggestprice xcounterprice: xcounterprice xtext: xtext EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xDisApproveSuggest: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber xidproject: (NSString*) xidproject xsqft: (NSString*) xsqft xsuggestprice: (NSString*) xsuggestprice xcounterprice: (NSString*) xcounterprice xtext: (NSString*) xtext EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnumber forName: @"xidnumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject forName: @"xidproject"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xsqft forName: @"xsqft"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xsuggestprice forName: @"xsuggestprice"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xcounterprice forName: @"xcounterprice"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xtext forName: @"xtext"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xDisApproveSuggest" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xDisApproveSuggest" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetProjectCOList: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia projectid: (NSString*) projectid EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetProjectCOList: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia projectid: projectid EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetProjectCOList: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia projectid: (NSString*) projectid EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: projectid forName: @"projectid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetProjectCOList" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetProjectCOList" postData: _envelope deserializeTo: [[wcfArrayOfCOListItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xUpdateCalendarApprove1: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia calendarData: (NSString*) calendarData xidnumber: (NSString*) xidnumber EquipmentType: (NSString*) EquipmentType
	{
		return [self xUpdateCalendarApprove1: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia calendarData: calendarData xidnumber: xidnumber EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xUpdateCalendarApprove1: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia calendarData: (NSString*) calendarData xidnumber: (NSString*) xidnumber EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: calendarData forName: @"calendarData"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnumber forName: @"xidnumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xUpdateCalendarApprove1" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xUpdateCalendarApprove1" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xUpdateCalendarDisApprove1: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia calendarData: (NSString*) calendarData xidnumber: (NSString*) xidnumber EquipmentType: (NSString*) EquipmentType
	{
		return [self xUpdateCalendarDisApprove1: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia calendarData: calendarData xidnumber: xidnumber EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xUpdateCalendarDisApprove1: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia calendarData: (NSString*) calendarData xidnumber: (NSString*) xidnumber EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: calendarData forName: @"calendarData"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnumber forName: @"xidnumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xUpdateCalendarDisApprove1" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xUpdateCalendarDisApprove1" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetPoVendor: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia currentPage: (int) currentPage EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetPoVendor: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia currentPage: currentPage EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetPoVendor: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia currentPage: (int) currentPage EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: currentPage] forName: @"currentPage"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetPoVendor" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetPoVendor" postData: _envelope deserializeTo: [[wcfArrayOfVendor alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetReasons: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetReasons: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetReasons: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetReasons" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetReasons" postData: _envelope deserializeTo: [[wcfArrayOfReasonListItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetNewPoVendorEmail: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidvendor: (NSString*) xidvendor EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetNewPoVendorEmail: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidvendor: xidvendor EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetNewPoVendorEmail: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidvendor: (NSString*) xidvendor EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidvendor forName: @"xidvendor"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetNewPoVendorEmail" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetNewPoVendorEmail" postData: _envelope deserializeTo: [[wcfArrayOfstring alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xNewVPO: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xidvendor: (NSString*) xidvendor xnvendor: (NSString*) xnvendor xidreason: (NSString*) xidreason xnreason: (NSString*) xnreason toemail: (NSString*) toemail delivery: (NSString*) delivery notes: (NSString*) notes quantity: (NSString*) quantity total: (NSString*) total EquipmentType: (NSString*) EquipmentType
	{
		return [self xNewVPO: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject: xidproject xidvendor: xidvendor xnvendor: xnvendor xidreason: xidreason xnreason: xnreason toemail: toemail delivery: delivery notes: notes quantity: quantity total: total EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xNewVPO: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xidvendor: (NSString*) xidvendor xnvendor: (NSString*) xnvendor xidreason: (NSString*) xidreason xnreason: (NSString*) xnreason toemail: (NSString*) toemail delivery: (NSString*) delivery notes: (NSString*) notes quantity: (NSString*) quantity total: (NSString*) total EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject forName: @"xidproject"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidvendor forName: @"xidvendor"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnvendor forName: @"xnvendor"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidreason forName: @"xidreason"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnreason forName: @"xnreason"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: toemail forName: @"toemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: delivery forName: @"delivery"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: notes forName: @"notes"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: quantity forName: @"quantity"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: total forName: @"total"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xNewVPO" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xNewVPO" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetPendingVpo: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetPendingVpo: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject: xidproject EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetPendingVpo: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject forName: @"xidproject"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetPendingVpo" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetPendingVpo" postData: _envelope deserializeTo: [[wcfArrayOfVpoListItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns wcfvpoDetail*.  */
	- (SoapRequest*) xGetPendingVpoDetail: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject idvpo: (NSString*) idvpo EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetPendingVpoDetail: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject: xidproject idvpo: idvpo EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetPendingVpoDetail: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject idvpo: (NSString*) idvpo EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject forName: @"xidproject"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: idvpo forName: @"idvpo"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetPendingVpoDetail" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetPendingVpoDetail" postData: _envelope deserializeTo: [[wcfvpoDetail alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xUpdateVPO: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xidnumber: (NSString*) xidnumber toemail: (NSString*) toemail delivery: (NSString*) delivery notes: (NSString*) notes total: (NSString*) total EquipmentType: (NSString*) EquipmentType
	{
		return [self xUpdateVPO: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject: xidproject xidnumber: xidnumber toemail: toemail delivery: delivery notes: notes total: total EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xUpdateVPO: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xidnumber: (NSString*) xidnumber toemail: (NSString*) toemail delivery: (NSString*) delivery notes: (NSString*) notes total: (NSString*) total EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject forName: @"xidproject"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnumber forName: @"xidnumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: toemail forName: @"toemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: delivery forName: @"delivery"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: notes forName: @"notes"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: total forName: @"total"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xUpdateVPO" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xUpdateVPO" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetProjectAddendumc: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetProjectAddendumc: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject: xidproject EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetProjectAddendumc: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject forName: @"xidproject"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetProjectAddendumc" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetProjectAddendumc" postData: _envelope deserializeTo: [[wcfArrayOfstring alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xVoidVPO: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber EquipmentType: (NSString*) EquipmentType
	{
		return [self xVoidVPO: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnumber: xidnumber EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xVoidVPO: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnumber forName: @"xidnumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xVoidVPO" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xVoidVPO" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xUpdateVPOWithPhoto: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xidnumber: (NSString*) xidnumber toemail: (NSString*) toemail delivery: (NSString*) delivery notes: (NSString*) notes total: (NSString*) total photoBase64String: (NSString*) photoBase64String EquipmentType: (NSString*) EquipmentType
	{
		return [self xUpdateVPOWithPhoto: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject: xidproject xidnumber: xidnumber toemail: toemail delivery: delivery notes: notes total: total photoBase64String: photoBase64String EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xUpdateVPOWithPhoto: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xidnumber: (NSString*) xidnumber toemail: (NSString*) toemail delivery: (NSString*) delivery notes: (NSString*) notes total: (NSString*) total photoBase64String: (NSString*) photoBase64String EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject forName: @"xidproject"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnumber forName: @"xidnumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: toemail forName: @"toemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: delivery forName: @"delivery"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: notes forName: @"notes"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: total forName: @"total"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: photoBase64String forName: @"photoBase64String"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xUpdateVPOWithPhoto" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xUpdateVPOWithPhoto" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xNewVPOWithPhoto: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xidvendor: (NSString*) xidvendor xnvendor: (NSString*) xnvendor xidreason: (NSString*) xidreason xnreason: (NSString*) xnreason toemail: (NSString*) toemail delivery: (NSString*) delivery notes: (NSString*) notes total: (NSString*) total photoBase64String: (NSString*) photoBase64String EquipmentType: (NSString*) EquipmentType
	{
		return [self xNewVPOWithPhoto: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject: xidproject xidvendor: xidvendor xnvendor: xnvendor xidreason: xidreason xnreason: xnreason toemail: toemail delivery: delivery notes: notes total: total photoBase64String: photoBase64String EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xNewVPOWithPhoto: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xidvendor: (NSString*) xidvendor xnvendor: (NSString*) xnvendor xidreason: (NSString*) xidreason xnreason: (NSString*) xnreason toemail: (NSString*) toemail delivery: (NSString*) delivery notes: (NSString*) notes total: (NSString*) total photoBase64String: (NSString*) photoBase64String EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject forName: @"xidproject"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidvendor forName: @"xidvendor"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnvendor forName: @"xnvendor"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidreason forName: @"xidreason"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnreason forName: @"xnreason"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: toemail forName: @"toemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: delivery forName: @"delivery"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: notes forName: @"notes"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: total forName: @"total"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: photoBase64String forName: @"photoBase64String"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xNewVPOWithPhoto" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xNewVPOWithPhoto" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetMenuBustOutForApprove: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword mastercompany: (NSString*) mastercompany EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetMenuBustOutForApprove: handler action: nil xemail: xemail xpassword: xpassword mastercompany: mastercompany EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetMenuBustOutForApprove: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword mastercompany: (NSString*) mastercompany EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: mastercompany forName: @"mastercompany"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetMenuBustOutForApprove" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetMenuBustOutForApprove" postData: _envelope deserializeTo: [[wcfArrayOfKeyValueItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetBustOutListForApprove: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetBustOutListForApprove: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetBustOutListForApprove: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetBustOutListForApprove" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetBustOutListForApprove" postData: _envelope deserializeTo: [[wcfArrayOfBustOutListItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns wcfBustOutItem*.  */
	- (SoapRequest*) xGetBustOutDetailForApprove: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xid: (NSString*) xid EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetBustOutDetailForApprove: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xid: xid EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetBustOutDetailForApprove: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xid: (NSString*) xid EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xid forName: @"xid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetBustOutDetailForApprove" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetBustOutDetailForApprove" postData: _envelope deserializeTo: [[wcfBustOutItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xGetBustOutEmail: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xidnumber: (NSString*) xidnumber EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetBustOutEmail: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject: xidproject xidnumber: xidnumber EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetBustOutEmail: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xidnumber: (NSString*) xidnumber EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject forName: @"xidproject"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnumber forName: @"xidnumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetBustOutEmail" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetBustOutEmail" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xApproveBustOut: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xidnumber: (NSString*) xidnumber toemail: (NSString*) toemail xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
	{
		return [self xApproveBustOut: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject: xidproject xidnumber: xidnumber toemail: toemail xnotes: xnotes EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xApproveBustOut: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xidnumber: (NSString*) xidnumber toemail: (NSString*) toemail xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject forName: @"xidproject"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnumber forName: @"xidnumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: toemail forName: @"toemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnotes forName: @"xnotes"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xApproveBustOut" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xApproveBustOut" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xDisapproveBustOut: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xidnumber: (NSString*) xidnumber toemail: (NSString*) toemail xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
	{
		return [self xDisapproveBustOut: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject: xidproject xidnumber: xidnumber toemail: toemail xnotes: xnotes EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xDisapproveBustOut: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xidnumber: (NSString*) xidnumber toemail: (NSString*) toemail xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject forName: @"xidproject"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnumber forName: @"xidnumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: toemail forName: @"toemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnotes forName: @"xnotes"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xDisapproveBustOut" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xDisapproveBustOut" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetKirbyTitleCnt: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetKirbyTitleCnt: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetKirbyTitleCnt: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetKirbyTitleCnt" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetKirbyTitleCnt" postData: _envelope deserializeTo: [[wcfArrayOfstring alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetKirbyTitleList: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia tdate: (NSString*) tdate EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetKirbyTitleList: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia tdate: tdate EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetKirbyTitleList: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia tdate: (NSString*) tdate EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: tdate forName: @"tdate"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetKirbyTitleList" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetKirbyTitleList" postData: _envelope deserializeTo: [[wcfArrayOfKirbytileItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetQACalendarCnt: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetQACalendarCnt: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetQACalendarCnt: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetQACalendarCnt" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetQACalendarCnt" postData: _envelope deserializeTo: [[wcfArrayOfstring alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetQACalendarList: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia tdate: (NSString*) tdate EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetQACalendarList: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia tdate: tdate EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetQACalendarList: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia tdate: (NSString*) tdate EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: tdate forName: @"tdate"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetQACalendarList" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetQACalendarList" postData: _envelope deserializeTo: [[wcfArrayOfQACalendarItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns wcfCalendarQA*.  */
	- (SoapRequest*) xGetQACalendarEntry: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetQACalendarEntry: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnum: xidnum EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetQACalendarEntry: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnum forName: @"xidnum"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetQACalendarEntry" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetQACalendarEntry" postData: _envelope deserializeTo: [[wcfCalendarQA alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns wcfInspectionqa*.  */
	- (SoapRequest*) xGetQAInspection: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetQAInspection: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnum: xidnum EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetQAInspection: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnum forName: @"xidnum"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetQAInspection" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetQAInspection" postData: _envelope deserializeTo: [[wcfInspectionqa alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xUpdQAReady: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
	{
		return [self xUpdQAReady: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnum: xidnum xnotes: xnotes EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xUpdQAReady: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnum forName: @"xidnum"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnotes forName: @"xnotes"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xUpdQAReady" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xUpdQAReady" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xUpdQANotReady: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
	{
		return [self xUpdQANotReady: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnum: xidnum xnotes: xnotes EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xUpdQANotReady: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnum forName: @"xidnum"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnotes forName: @"xnotes"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xUpdQANotReady" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xUpdQANotReady" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xUpdQASaveAndFinish: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
	{
		return [self xUpdQASaveAndFinish: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnum: xidnum xnotes: xnotes EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xUpdQASaveAndFinish: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnum forName: @"xidnum"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnotes forName: @"xnotes"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xUpdQASaveAndFinish" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xUpdQASaveAndFinish" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xUpdQASaveAndFail: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
	{
		return [self xUpdQASaveAndFail: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnum: xidnum xnotes: xnotes EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xUpdQASaveAndFail: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnum forName: @"xidnum"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnotes forName: @"xnotes"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xUpdQASaveAndFail" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xUpdQASaveAndFail" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xUpdQAResubmit: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
	{
		return [self xUpdQAResubmit: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnum: xidnum xnotes: xnotes EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xUpdQAResubmit: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnum forName: @"xidnum"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnotes forName: @"xnotes"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xUpdQAResubmit" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xUpdQAResubmit" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns wcfCalendarQAb*.  */
	- (SoapRequest*) xGetQAInspection2b: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetQAInspection2b: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnum: xidnum EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetQAInspection2b: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnum forName: @"xidnum"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetQAInspection2b" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetQAInspection2b" postData: _envelope deserializeTo: [[wcfCalendarQAb alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetQAInspection2bAdd: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetQAInspection2bAdd: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnum: xidnum EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetQAInspection2bAdd: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnum forName: @"xidnum"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetQAInspection2bAdd" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetQAInspection2bAdd" postData: _envelope deserializeTo: [[wcfArrayOfstring alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xQaCalendarInspection2bAdd: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject1chk1: (NSString*) xidproject1chk1 reason: (NSString*) reason xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
	{
		return [self xQaCalendarInspection2bAdd: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject1chk1: xidproject1chk1 reason: reason xnotes: xnotes EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xQaCalendarInspection2bAdd: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject1chk1: (NSString*) xidproject1chk1 reason: (NSString*) reason xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject1chk1 forName: @"xidproject1chk1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: reason forName: @"reason"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnotes forName: @"xnotes"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xQaCalendarInspection2bAdd" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xQaCalendarInspection2bAdd" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xQaCalendarInspection2bAddWithImg: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject1chk1: (NSString*) xidproject1chk1 reason: (NSString*) reason xnotes: (NSString*) xnotes photoBase64String: (NSString*) photoBase64String EquipmentType: (NSString*) EquipmentType
	{
		return [self xQaCalendarInspection2bAddWithImg: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject1chk1: xidproject1chk1 reason: reason xnotes: xnotes photoBase64String: photoBase64String EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xQaCalendarInspection2bAddWithImg: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject1chk1: (NSString*) xidproject1chk1 reason: (NSString*) reason xnotes: (NSString*) xnotes photoBase64String: (NSString*) photoBase64String EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject1chk1 forName: @"xidproject1chk1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: reason forName: @"reason"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnotes forName: @"xnotes"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: photoBase64String forName: @"photoBase64String"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xQaCalendarInspection2bAddWithImg" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xQaCalendarInspection2bAddWithImg" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xQaCalendarInspection2bUpd: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
	{
		return [self xQaCalendarInspection2bUpd: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnumber: xidnumber xnotes: xnotes EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xQaCalendarInspection2bUpd: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnumber forName: @"xidnumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnotes forName: @"xnotes"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xQaCalendarInspection2bUpd" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xQaCalendarInspection2bUpd" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xQaCalendarInspection2bUpdWithImg: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber xnotes: (NSString*) xnotes photoBase64String: (NSString*) photoBase64String EquipmentType: (NSString*) EquipmentType
	{
		return [self xQaCalendarInspection2bUpdWithImg: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnumber: xidnumber xnotes: xnotes photoBase64String: photoBase64String EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xQaCalendarInspection2bUpdWithImg: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber xnotes: (NSString*) xnotes photoBase64String: (NSString*) photoBase64String EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnumber forName: @"xidnumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnotes forName: @"xnotes"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: photoBase64String forName: @"photoBase64String"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xQaCalendarInspection2bUpdWithImg" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xQaCalendarInspection2bUpdWithImg" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns wcfCalendarQAbItemDetail*.  */
	- (SoapRequest*) xGetQaCalendarInspection2bItem: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetQaCalendarInspection2bItem: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnumber: xidnumber EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetQaCalendarInspection2bItem: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnumber forName: @"xidnumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetQaCalendarInspection2bItem" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetQaCalendarInspection2bItem" postData: _envelope deserializeTo: [[wcfCalendarQAbItemDetail alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xQaCalendarInspection2bBtn3: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
	{
		return [self xQaCalendarInspection2bBtn3: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnumber: xidnumber xnotes: xnotes EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xQaCalendarInspection2bBtn3: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnumber forName: @"xidnumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnotes forName: @"xnotes"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xQaCalendarInspection2bBtn3" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xQaCalendarInspection2bBtn3" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xQaCalendarInspection2bBtn3WithImg: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber photoBase64String: (NSString*) photoBase64String xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
	{
		return [self xQaCalendarInspection2bBtn3WithImg: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnumber: xidnumber photoBase64String: photoBase64String xnotes: xnotes EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xQaCalendarInspection2bBtn3WithImg: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber photoBase64String: (NSString*) photoBase64String xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnumber forName: @"xidnumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: photoBase64String forName: @"photoBase64String"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnotes forName: @"xnotes"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xQaCalendarInspection2bBtn3WithImg" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xQaCalendarInspection2bBtn3WithImg" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xQaCalendarInspection2bBtn4: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
	{
		return [self xQaCalendarInspection2bBtn4: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnumber: xidnumber xnotes: xnotes EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xQaCalendarInspection2bBtn4: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnumber forName: @"xidnumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnotes forName: @"xnotes"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xQaCalendarInspection2bBtn4" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xQaCalendarInspection2bBtn4" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xQaCalendarInspection2bBtn4WithImg: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber photoBase64String: (NSString*) photoBase64String xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
	{
		return [self xQaCalendarInspection2bBtn4WithImg: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnumber: xidnumber photoBase64String: photoBase64String xnotes: xnotes EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xQaCalendarInspection2bBtn4WithImg: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnumber: (NSString*) xidnumber photoBase64String: (NSString*) photoBase64String xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnumber forName: @"xidnumber"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: photoBase64String forName: @"photoBase64String"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnotes forName: @"xnotes"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xQaCalendarInspection2bBtn4WithImg" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xQaCalendarInspection2bBtn4WithImg" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xQaCalendarInspection2bAddPass: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject1chk1: (NSString*) xidproject1chk1 reason: (NSString*) reason xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
	{
		return [self xQaCalendarInspection2bAddPass: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject1chk1: xidproject1chk1 reason: reason xnotes: xnotes EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xQaCalendarInspection2bAddPass: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject1chk1: (NSString*) xidproject1chk1 reason: (NSString*) reason xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject1chk1 forName: @"xidproject1chk1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: reason forName: @"reason"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnotes forName: @"xnotes"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xQaCalendarInspection2bAddPass" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xQaCalendarInspection2bAddPass" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xQaCalendarInspection2bAddPassWithImg: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject1chk1: (NSString*) xidproject1chk1 reason: (NSString*) reason xnotes: (NSString*) xnotes photoBase64String: (NSString*) photoBase64String EquipmentType: (NSString*) EquipmentType
	{
		return [self xQaCalendarInspection2bAddPassWithImg: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject1chk1: xidproject1chk1 reason: reason xnotes: xnotes photoBase64String: photoBase64String EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xQaCalendarInspection2bAddPassWithImg: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject1chk1: (NSString*) xidproject1chk1 reason: (NSString*) reason xnotes: (NSString*) xnotes photoBase64String: (NSString*) photoBase64String EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject1chk1 forName: @"xidproject1chk1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: reason forName: @"reason"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnotes forName: @"xnotes"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: photoBase64String forName: @"photoBase64String"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xQaCalendarInspection2bAddPassWithImg" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xQaCalendarInspection2bAddPassWithImg" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetMenuRequestedPOForApprove: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword mastercompany: (NSString*) mastercompany EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetMenuRequestedPOForApprove: handler action: nil xemail: xemail xpassword: xpassword mastercompany: mastercompany EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetMenuRequestedPOForApprove: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword mastercompany: (NSString*) mastercompany EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: mastercompany forName: @"mastercompany"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetMenuRequestedPOForApprove" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetMenuRequestedPOForApprove" postData: _envelope deserializeTo: [[wcfArrayOfKeyValueItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetRequestedPOForApproveLs: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetRequestedPOForApproveLs: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetRequestedPOForApproveLs: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetRequestedPOForApproveLs" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetRequestedPOForApproveLs" postData: _envelope deserializeTo: [[wcfArrayOfRequestedPOListItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xgetRequestedPoReason: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia EquipmentType: (NSString*) EquipmentType
	{
		return [self xgetRequestedPoReason: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xgetRequestedPoReason: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xgetRequestedPoReason" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xgetRequestedPoReason" postData: _envelope deserializeTo: [[wcfArrayOfReasonListItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns wcfRequestedPODetail*.  */
	- (SoapRequest*) xGetRequestedPOForApproveDetail: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetRequestedPOForApproveDetail: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnum: xidnum EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetRequestedPOForApproveDetail: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnum forName: @"xidnum"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetRequestedPOForApproveDetail" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetRequestedPOForApproveDetail" postData: _envelope deserializeTo: [[wcfRequestedPODetail alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetQAInspection2bItemLs: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum xstatus: (NSString*) xstatus EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetQAInspection2bItemLs: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnum: xidnum xstatus: xstatus EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetQAInspection2bItemLs: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum xstatus: (NSString*) xstatus EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnum forName: @"xidnum"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xstatus forName: @"xstatus"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetQAInspection2bItemLs" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetQAInspection2bItemLs" postData: _envelope deserializeTo: [[wcfArrayOfCalendarQAbItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xGetQACalendarStatus: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetQACalendarStatus: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnum: xidnum EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetQACalendarStatus: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnum forName: @"xidnum"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetQACalendarStatus" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetQACalendarStatus" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xAprroveRequestedPOWithEmail: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum reason: (NSString*) reason xtotal: (NSString*) xtotal xdate: (NSString*) xdate xnotes: (NSString*) xnotes xstr: (NSString*) xstr emailbody: (NSString*) emailbody EquipmentType: (NSString*) EquipmentType
	{
		return [self xAprroveRequestedPOWithEmail: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnum: xidnum reason: reason xtotal: xtotal xdate: xdate xnotes: xnotes xstr: xstr emailbody: emailbody EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xAprroveRequestedPOWithEmail: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum reason: (NSString*) reason xtotal: (NSString*) xtotal xdate: (NSString*) xdate xnotes: (NSString*) xnotes xstr: (NSString*) xstr emailbody: (NSString*) emailbody EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnum forName: @"xidnum"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: reason forName: @"reason"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xtotal forName: @"xtotal"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xdate forName: @"xdate"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnotes forName: @"xnotes"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xstr forName: @"xstr"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: emailbody forName: @"emailbody"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xAprroveRequestedPOWithEmail" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xAprroveRequestedPOWithEmail" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xVoidRequestedPOWithEmail: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum emailbody: (NSString*) emailbody xtotal: (NSString*) xtotal xdate: (NSString*) xdate xstr: (NSString*) xstr xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
	{
		return [self xVoidRequestedPOWithEmail: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnum: xidnum emailbody: emailbody xtotal: xtotal xdate: xdate xstr: xstr xnotes: xnotes EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xVoidRequestedPOWithEmail: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum emailbody: (NSString*) emailbody xtotal: (NSString*) xtotal xdate: (NSString*) xdate xstr: (NSString*) xstr xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnum forName: @"xidnum"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: emailbody forName: @"emailbody"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xtotal forName: @"xtotal"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xdate forName: @"xdate"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xstr forName: @"xstr"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnotes forName: @"xnotes"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xVoidRequestedPOWithEmail" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xVoidRequestedPOWithEmail" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xDisAprroveRequestedPOWithEmail: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum emailbody: (NSString*) emailbody xtotal: (NSString*) xtotal xdate: (NSString*) xdate xstr: (NSString*) xstr xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
	{
		return [self xDisAprroveRequestedPOWithEmail: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnum: xidnum emailbody: emailbody xtotal: xtotal xdate: xdate xstr: xstr xnotes: xnotes EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xDisAprroveRequestedPOWithEmail: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum emailbody: (NSString*) emailbody xtotal: (NSString*) xtotal xdate: (NSString*) xdate xstr: (NSString*) xstr xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnum forName: @"xidnum"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: emailbody forName: @"emailbody"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xtotal forName: @"xtotal"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xdate forName: @"xdate"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xstr forName: @"xstr"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnotes forName: @"xnotes"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xDisAprroveRequestedPOWithEmail" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xDisAprroveRequestedPOWithEmail" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetRequestedPOHoldLs: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetRequestedPOHoldLs: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetRequestedPOHoldLs: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetRequestedPOHoldLs" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetRequestedPOHoldLs" postData: _envelope deserializeTo: [[wcfArrayOfRequestedPOListItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetMenuRequestedPOHold: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword mastercompany: (NSString*) mastercompany EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetMenuRequestedPOHold: handler action: nil xemail: xemail xpassword: xpassword mastercompany: mastercompany EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetMenuRequestedPOHold: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword mastercompany: (NSString*) mastercompany EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: mastercompany forName: @"mastercompany"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetMenuRequestedPOHold" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetMenuRequestedPOHold" postData: _envelope deserializeTo: [[wcfArrayOfKeyValueItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xHoldRequestedPOWithEmail: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum emailbody: (NSString*) emailbody xtotal: (NSString*) xtotal xdate: (NSString*) xdate xstr: (NSString*) xstr xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
	{
		return [self xHoldRequestedPOWithEmail: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidnum: xidnum emailbody: emailbody xtotal: xtotal xdate: xdate xstr: xstr xnotes: xnotes EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xHoldRequestedPOWithEmail: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidnum: (NSString*) xidnum emailbody: (NSString*) emailbody xtotal: (NSString*) xtotal xdate: (NSString*) xdate xstr: (NSString*) xstr xnotes: (NSString*) xnotes EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidnum forName: @"xidnum"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: emailbody forName: @"emailbody"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xtotal forName: @"xtotal"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xdate forName: @"xdate"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xstr forName: @"xstr"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnotes forName: @"xnotes"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xHoldRequestedPOWithEmail" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xHoldRequestedPOWithEmail" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetInspectorByYear: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xyear: (NSString*) xyear EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetInspectorByYear: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xyear: xyear EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetInspectorByYear: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xyear: (NSString*) xyear EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xyear forName: @"xyear"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetInspectorByYear" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetInspectorByYear" postData: _envelope deserializeTo: [[wcfArrayOfQAInspect alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetProjectRequestedPOLs: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetProjectRequestedPOLs: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject: xidproject EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetProjectRequestedPOLs: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject forName: @"xidproject"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetProjectRequestedPOLs" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetProjectRequestedPOLs" postData: _envelope deserializeTo: [[wcfArrayOfRequestedPOListItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetInspectorByMonthAndEmail: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xyear: (NSString*) xyear xqaemail: (NSString*) xqaemail xmonth: (NSString*) xmonth EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetInspectorByMonthAndEmail: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xyear: xyear xqaemail: xqaemail xmonth: xmonth EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetInspectorByMonthAndEmail: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xyear: (NSString*) xyear xqaemail: (NSString*) xqaemail xmonth: (NSString*) xmonth EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xyear forName: @"xyear"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xqaemail forName: @"xqaemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xmonth forName: @"xmonth"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetInspectorByMonthAndEmail" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetInspectorByMonthAndEmail" postData: _envelope deserializeTo: [[wcfArrayOfQACalendarItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetNewSchedule1: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetNewSchedule1: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject: xidproject EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetNewSchedule1: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject forName: @"xidproject"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetNewSchedule1" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetNewSchedule1" postData: _envelope deserializeTo: [[wcfArrayOfProjectSchedule alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetNewSchedule2: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xstep: (NSString*) xstep EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetNewSchedule2: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject: xidproject xstep: xstep EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetNewSchedule2: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xstep: (NSString*) xstep EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject forName: @"xidproject"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xstep forName: @"xstep"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetNewSchedule2" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetNewSchedule2" postData: _envelope deserializeTo: [[wcfArrayOfProjectSchedule alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns wcfProjectScheduleComplete*.  */
	- (SoapRequest*) xCompleteSchedule: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xprojectid: (NSString*) xprojectid refid: (NSString*) refid completeDate: (NSString*) completeDate EquipmentType: (NSString*) EquipmentType
	{
		return [self xCompleteSchedule: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xprojectid: xprojectid refid: refid completeDate: completeDate EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xCompleteSchedule: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xprojectid: (NSString*) xprojectid refid: (NSString*) refid completeDate: (NSString*) completeDate EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xprojectid forName: @"xprojectid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: refid forName: @"refid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: completeDate forName: @"completeDate"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xCompleteSchedule" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xCompleteSchedule" postData: _envelope deserializeTo: [[wcfProjectScheduleComplete alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetEmailList2: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xpo1: (NSString*) xpo1 idvendor: (NSString*) idvendor xtype: (NSString*) xtype
	{
		return [self xGetEmailList2: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xpo1: xpo1 idvendor: idvendor xtype: xtype];
	}

	- (SoapRequest*) xGetEmailList2: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xpo1: (NSString*) xpo1 idvendor: (NSString*) idvendor xtype: (NSString*) xtype
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpo1 forName: @"xpo1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: idvendor forName: @"idvendor"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xtype forName: @"xtype"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetEmailList2" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetEmailList2" postData: _envelope deserializeTo: [[wcfArrayOfstring alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetTaskDue: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetTaskDue: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject: xidproject EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetTaskDue: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject forName: @"xidproject"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetTaskDue" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetTaskDue" postData: _envelope deserializeTo: [[wcfArrayOfProjectSchedule alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetReschedule: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xidmainstep: (NSString*) xidmainstep EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetReschedule: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject: xidproject xidmainstep: xidmainstep EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetReschedule: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xidmainstep: (NSString*) xidmainstep EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject forName: @"xidproject"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidmainstep forName: @"xidmainstep"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetReschedule" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetReschedule" postData: _envelope deserializeTo: [[wcfArrayOfKeyValueItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) xSubmitReschedule: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xidmainstep: (NSString*) xidmainstep xidreson: (NSString*) xidreson xnreson: (NSString*) xnreson xredate: (NSString*) xredate xcomment: (NSString*) xcomment xdays: (NSString*) xdays EquipmentType: (NSString*) EquipmentType
	{
		return [self xSubmitReschedule: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject: xidproject xidmainstep: xidmainstep xidreson: xidreson xnreson: xnreson xredate: xredate xcomment: xcomment xdays: xdays EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xSubmitReschedule: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject xidmainstep: (NSString*) xidmainstep xidreson: (NSString*) xidreson xnreson: (NSString*) xnreson xredate: (NSString*) xredate xcomment: (NSString*) xcomment xdays: (NSString*) xdays EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject forName: @"xidproject"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidmainstep forName: @"xidmainstep"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidreson forName: @"xidreson"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xnreson forName: @"xnreson"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xredate forName: @"xredate"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xcomment forName: @"xcomment"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xdays forName: @"xdays"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xSubmitReschedule" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xSubmitReschedule" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xSearchProjects: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia keyword: (NSString*) keyword EquipmentType: (NSString*) EquipmentType
	{
		return [self xSearchProjects: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia keyword: keyword EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xSearchProjects: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia keyword: (NSString*) keyword EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: keyword forName: @"keyword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xSearchProjects" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xSearchProjects" postData: _envelope deserializeTo: [[wcfArrayOfProjectListItem alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns wcfVendorInfo*.  */
	- (SoapRequest*) xGetVendorInfo: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xciaid: (NSString*) xciaid xiddevelopment: (NSString*) xiddevelopment xvendorid: (NSString*) xvendorid EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetVendorInfo: handler action: nil xemail: xemail xpassword: xpassword xciaid: xciaid xiddevelopment: xiddevelopment xvendorid: xvendorid EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetVendorInfo: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xciaid: (NSString*) xciaid xiddevelopment: (NSString*) xiddevelopment xvendorid: (NSString*) xvendorid EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xciaid forName: @"xciaid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xiddevelopment forName: @"xiddevelopment"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xvendorid forName: @"xvendorid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetVendorInfo" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetVendorInfo" postData: _envelope deserializeTo: [[wcfVendorInfo alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetDevelopmentVendorList: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetDevelopmentVendorList: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia xidproject: xidproject EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetDevelopmentVendorList: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia xidproject: (NSString*) xidproject EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidproject forName: @"xidproject"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetDevelopmentVendorList" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetDevelopmentVendorList" postData: _envelope deserializeTo: [[wcfArrayOfVendor alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xSearchVendorList: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia keyword: (NSString*) keyword EquipmentType: (NSString*) EquipmentType
	{
		return [self xSearchVendorList: handler action: nil xemail: xemail xpassword: xpassword xidcia: xidcia keyword: keyword EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xSearchVendorList: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xidcia: (NSString*) xidcia keyword: (NSString*) keyword EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xidcia forName: @"xidcia"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: keyword forName: @"keyword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xSearchVendorList" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xSearchVendorList" postData: _envelope deserializeTo: [[wcfArrayOfVendor alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns wcfVendorInfo*.  */
	- (SoapRequest*) xGetVendorInfo2: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword xciaid: (NSString*) xciaid xvendorid: (NSString*) xvendorid EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetVendorInfo2: handler action: nil xemail: xemail xpassword: xpassword xciaid: xciaid xvendorid: xvendorid EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetVendorInfo2: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword xciaid: (NSString*) xciaid xvendorid: (NSString*) xvendorid EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xciaid forName: @"xciaid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xvendorid forName: @"xvendorid"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetVendorInfo2" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetVendorInfo2" postData: _envelope deserializeTo: [[wcfVendorInfo alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSMutableArray*.  */
	- (SoapRequest*) xGetVendorPOSelectCia: (id <SoapDelegate>) handler xemail: (NSString*) xemail xpassword: (NSString*) xpassword mastercompany: (NSString*) mastercompany idvendor: (NSString*) idvendor EquipmentType: (NSString*) EquipmentType
	{
		return [self xGetVendorPOSelectCia: handler action: nil xemail: xemail xpassword: xpassword mastercompany: mastercompany idvendor: idvendor EquipmentType: EquipmentType];
	}

	- (SoapRequest*) xGetVendorPOSelectCia: (id) _target action: (SEL) _action xemail: (NSString*) xemail xpassword: (NSString*) xpassword mastercompany: (NSString*) mastercompany idvendor: (NSString*) idvendor EquipmentType: (NSString*) EquipmentType
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: xemail forName: @"xemail"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: xpassword forName: @"xpassword"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: mastercompany forName: @"mastercompany"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: idvendor forName: @"idvendor"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: EquipmentType forName: @"EquipmentType"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"xGetVendorPOSelectCia" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://tempuri.org/IService/xGetVendorPOSelectCia" postData: _envelope deserializeTo: [[wcfArrayOfKeyValueItem alloc] autorelease]];
		[_request send];
		return _request;
	}


@end
	