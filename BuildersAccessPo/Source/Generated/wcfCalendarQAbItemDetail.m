/*
	wcfCalendarQAbItemDetail.h
	The implementation of properties and methods for the wcfCalendarQAbItemDetail object.
	Generated by SudzC.com
*/
#import "wcfCalendarQAbItemDetail.h"

@implementation wcfCalendarQAbItemDetail
	@synthesize Category = _Category;
	@synthesize Fs = _Fs;
	@synthesize Notes = _Notes;
	@synthesize btn1 = _btn1;
	@synthesize btn1color = _btn1color;
	@synthesize btn1name = _btn1name;
	@synthesize btn3 = _btn3;
	@synthesize btn3color = _btn3color;
	@synthesize btn4 = _btn4;

	- (id) init
	{
		if(self = [super init])
		{
			self.Category = nil;
			self.Fs = nil;
			self.Notes = nil;
			self.btn1 = nil;
			self.btn1color = nil;
			self.btn1name = nil;
			self.btn3 = nil;
			self.btn3color = nil;
			self.btn4 = nil;

		}
		return self;
	}

	+ (wcfCalendarQAbItemDetail*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (wcfCalendarQAbItemDetail*)[[[wcfCalendarQAbItemDetail alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Category = [Soap getNodeValue: node withName: @"Category"];
			self.Fs = [Soap getNodeValue: node withName: @"Fs"];
			self.Notes = [Soap getNodeValue: node withName: @"Notes"];
			self.btn1 = [Soap getNodeValue: node withName: @"btn1"];
			self.btn1color = [Soap getNodeValue: node withName: @"btn1color"];
			self.btn1name = [Soap getNodeValue: node withName: @"btn1name"];
			self.btn3 = [Soap getNodeValue: node withName: @"btn3"];
			self.btn3color = [Soap getNodeValue: node withName: @"btn3color"];
			self.btn4 = [Soap getNodeValue: node withName: @"btn4"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"CalendarQAbItemDetail"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Category != nil) [s appendFormat: @"<Category>%@</Category>", [[self.Category stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Fs != nil) [s appendFormat: @"<Fs>%@</Fs>", [[self.Fs stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Notes != nil) [s appendFormat: @"<Notes>%@</Notes>", [[self.Notes stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.btn1 != nil) [s appendFormat: @"<btn1>%@</btn1>", [[self.btn1 stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.btn1color != nil) [s appendFormat: @"<btn1color>%@</btn1color>", [[self.btn1color stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.btn1name != nil) [s appendFormat: @"<btn1name>%@</btn1name>", [[self.btn1name stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.btn3 != nil) [s appendFormat: @"<btn3>%@</btn3>", [[self.btn3 stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.btn3color != nil) [s appendFormat: @"<btn3color>%@</btn3color>", [[self.btn3color stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.btn4 != nil) [s appendFormat: @"<btn4>%@</btn4>", [[self.btn4 stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[wcfCalendarQAbItemDetail class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.Category != nil) { [self.Category release]; }
		if(self.Fs != nil) { [self.Fs release]; }
		if(self.Notes != nil) { [self.Notes release]; }
		if(self.btn1 != nil) { [self.btn1 release]; }
		if(self.btn1color != nil) { [self.btn1color release]; }
		if(self.btn1name != nil) { [self.btn1name release]; }
		if(self.btn3 != nil) { [self.btn3 release]; }
		if(self.btn3color != nil) { [self.btn3color release]; }
		if(self.btn4 != nil) { [self.btn4 release]; }
		[super dealloc];
	}

@end
