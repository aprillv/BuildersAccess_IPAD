/*
	wcfInspectionqa.h
	The implementation of properties and methods for the wcfInspectionqa object.
	Generated by SudzC.com
*/
#import "wcfInspectionqa.h"

@implementation wcfInspectionqa
	@synthesize AssignTo = _AssignTo;
	@synthesize Inspection = _Inspection;
	@synthesize NotReady = _NotReady;
	@synthesize Notes = _Notes;
	@synthesize Nproejct = _Nproejct;
	@synthesize Ready = _Ready;

	- (id) init
	{
		if(self = [super init])
		{
			self.AssignTo = nil;
			self.Inspection = nil;
			self.NotReady = nil;
			self.Notes = nil;
			self.Nproejct = nil;
			self.Ready = nil;

		}
		return self;
	}

	+ (wcfInspectionqa*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (wcfInspectionqa*)[[[wcfInspectionqa alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.AssignTo = [Soap getNodeValue: node withName: @"AssignTo"];
			self.Inspection = [Soap getNodeValue: node withName: @"Inspection"];
			self.NotReady = [Soap getNodeValue: node withName: @"NotReady"];
			self.Notes = [Soap getNodeValue: node withName: @"Notes"];
			self.Nproejct = [Soap getNodeValue: node withName: @"Nproejct"];
			self.Ready = [Soap getNodeValue: node withName: @"Ready"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Inspectionqa"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.AssignTo != nil) [s appendFormat: @"<AssignTo>%@</AssignTo>", [[self.AssignTo stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Inspection != nil) [s appendFormat: @"<Inspection>%@</Inspection>", [[self.Inspection stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.NotReady != nil) [s appendFormat: @"<NotReady>%@</NotReady>", [[self.NotReady stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Notes != nil) [s appendFormat: @"<Notes>%@</Notes>", [[self.Notes stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Nproejct != nil) [s appendFormat: @"<Nproejct>%@</Nproejct>", [[self.Nproejct stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Ready != nil) [s appendFormat: @"<Ready>%@</Ready>", [[self.Ready stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[wcfInspectionqa class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.AssignTo != nil) { [self.AssignTo release]; }
		if(self.Inspection != nil) { [self.Inspection release]; }
		if(self.NotReady != nil) { [self.NotReady release]; }
		if(self.Notes != nil) { [self.Notes release]; }
		if(self.Nproejct != nil) { [self.Nproejct release]; }
		if(self.Ready != nil) { [self.Ready release]; }
		[super dealloc];
	}

@end
