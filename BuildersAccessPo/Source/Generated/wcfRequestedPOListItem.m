/*
	wcfRequestedPOListItem.h
	The implementation of properties and methods for the wcfRequestedPOListItem object.
	Generated by SudzC.com
*/
#import "wcfRequestedPOListItem.h"

@implementation wcfRequestedPOListItem
	@synthesize IdNumber = _IdNumber;
	@synthesize Nproject = _Nproject;
	@synthesize Nvendor = _Nvendor;
	@synthesize RequestedDate = _RequestedDate;
	@synthesize Total = _Total;

	- (id) init
	{
		if(self = [super init])
		{
			self.IdNumber = nil;
			self.Nproject = nil;
			self.Nvendor = nil;
			self.RequestedDate = nil;
			self.Total = nil;

		}
		return self;
	}

	+ (wcfRequestedPOListItem*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (wcfRequestedPOListItem*)[[[wcfRequestedPOListItem alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.IdNumber = [Soap getNodeValue: node withName: @"IdNumber"];
			self.Nproject = [Soap getNodeValue: node withName: @"Nproject"];
			self.Nvendor = [Soap getNodeValue: node withName: @"Nvendor"];
			self.RequestedDate = [Soap getNodeValue: node withName: @"RequestedDate"];
			self.Total = [Soap getNodeValue: node withName: @"Total"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"RequestedPOListItem"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.IdNumber != nil) [s appendFormat: @"<IdNumber>%@</IdNumber>", [[self.IdNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Nproject != nil) [s appendFormat: @"<Nproject>%@</Nproject>", [[self.Nproject stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Nvendor != nil) [s appendFormat: @"<Nvendor>%@</Nvendor>", [[self.Nvendor stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.RequestedDate != nil) [s appendFormat: @"<RequestedDate>%@</RequestedDate>", [[self.RequestedDate stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Total != nil) [s appendFormat: @"<Total>%@</Total>", [[self.Total stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[wcfRequestedPOListItem class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.IdNumber != nil) { [self.IdNumber release]; }
		if(self.Nproject != nil) { [self.Nproject release]; }
		if(self.Nvendor != nil) { [self.Nvendor release]; }
		if(self.RequestedDate != nil) { [self.RequestedDate release]; }
		if(self.Total != nil) { [self.Total release]; }
		[super dealloc];
	}

@end
