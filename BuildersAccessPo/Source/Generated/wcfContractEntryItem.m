/*
	wcfContractEntryItem.h
	The implementation of properties and methods for the wcfContractEntryItem object.
	Generated by SudzC.com
*/
#import "wcfContractEntryItem.h"

#import "wcfArrayOfContractDepositItem.h"
@implementation wcfContractEntryItem
	@synthesize Acknowledge = _Acknowledge;
	@synthesize AdditionalDep = _AdditionalDep;
	@synthesize AdministrativeCost = _AdministrativeCost;
	@synthesize Agent = _Agent;
	@synthesize Approve = _Approve;
	@synthesize BSalesPrice = _BSalesPrice;
	@synthesize Balance = _Balance;
	@synthesize BasePrice = _BasePrice;
	@synthesize Baths = _Baths;
	@synthesize Bedrooms = _Bedrooms;
	@synthesize Broker = _Broker;
	@synthesize Buyer = _Buyer;
	@synthesize C1SalesPrice = _C1SalesPrice;
	@synthesize C2SalesPrice = _C2SalesPrice;
	@synthesize C3SalesPrice = _C3SalesPrice;
	@synthesize Collected = _Collected;
	@synthesize ConstructionCost = _ConstructionCost;
	@synthesize Consultant = _Consultant;
	@synthesize ContractDate = _ContractDate;
	@synthesize DSalesPrice = _DSalesPrice;
	@synthesize DisApprove = _DisApprove;
	@synthesize ESalesPrice = _ESalesPrice;
	@synthesize Estimated = _Estimated;
	@synthesize FSalesPrice = _FSalesPrice;
	@synthesize FinalPrice = _FinalPrice;
	@synthesize GSalesPrice = _GSalesPrice;
	@synthesize Garage = _Garage;
	@synthesize GranTotal = _GranTotal;
	@synthesize IDCia = _IDCia;
	@synthesize IDDoc = _IDDoc;
	@synthesize IDFloorplan = _IDFloorplan;
	@synthesize IDNumber = _IDNumber;
	@synthesize IDProject = _IDProject;
	@synthesize IDSub = _IDSub;
	@synthesize IsShow = _IsShow;
	@synthesize ListPrice = _ListPrice;
	@synthesize LotCost = _LotCost;
	@synthesize NProject = _NProject;
	@synthesize NonRefundable = _NonRefundable;
	@synthesize OpenPO = _OpenPO;
	@synthesize PlanName = _PlanName;
	@synthesize Repeated = _Repeated;
	@synthesize Reverseyn = _Reverseyn;
	@synthesize SalesList = _SalesList;
	@synthesize SalesPrice = _SalesPrice;
	@synthesize Stage = _Stage;
	@synthesize SubDivision = _SubDivision;

	- (id) init
	{
		if(self = [super init])
		{
			self.AdditionalDep = nil;
			self.AdministrativeCost = nil;
			self.Agent = nil;
			self.BSalesPrice = nil;
			self.Balance = nil;
			self.BasePrice = nil;
			self.Baths = nil;
			self.Bedrooms = nil;
			self.Broker = nil;
			self.Buyer = nil;
			self.C1SalesPrice = nil;
			self.C2SalesPrice = nil;
			self.C3SalesPrice = nil;
			self.Collected = nil;
			self.ConstructionCost = nil;
			self.Consultant = nil;
			self.ContractDate = nil;
			self.DSalesPrice = nil;
			self.ESalesPrice = nil;
			self.Estimated = nil;
			self.FSalesPrice = nil;
			self.FinalPrice = nil;
			self.GSalesPrice = nil;
			self.Garage = nil;
			self.GranTotal = nil;
			self.IDCia = nil;
			self.IDDoc = nil;
			self.IDFloorplan = nil;
			self.IDNumber = nil;
			self.IDProject = nil;
			self.IDSub = nil;
			self.ListPrice = nil;
			self.LotCost = nil;
			self.NProject = nil;
			self.NonRefundable = nil;
			self.OpenPO = nil;
			self.PlanName = nil;
			self.SalesList = [[[NSMutableArray alloc] init] autorelease];
			self.SalesPrice = nil;
			self.Stage = nil;
			self.SubDivision = nil;

		}
		return self;
	}

	+ (wcfContractEntryItem*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (wcfContractEntryItem*)[[[wcfContractEntryItem alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Acknowledge = [[Soap getNodeValue: node withName: @"Acknowledge"] boolValue];
			self.AdditionalDep = [Soap getNodeValue: node withName: @"AdditionalDep"];
			self.AdministrativeCost = [Soap getNodeValue: node withName: @"AdministrativeCost"];
			self.Agent = [Soap getNodeValue: node withName: @"Agent"];
			self.Approve = [[Soap getNodeValue: node withName: @"Approve"] boolValue];
			self.BSalesPrice = [Soap getNodeValue: node withName: @"BSalesPrice"];
			self.Balance = [Soap getNodeValue: node withName: @"Balance"];
			self.BasePrice = [Soap getNodeValue: node withName: @"BasePrice"];
			self.Baths = [Soap getNodeValue: node withName: @"Baths"];
			self.Bedrooms = [Soap getNodeValue: node withName: @"Bedrooms"];
			self.Broker = [Soap getNodeValue: node withName: @"Broker"];
			self.Buyer = [Soap getNodeValue: node withName: @"Buyer"];
			self.C1SalesPrice = [Soap getNodeValue: node withName: @"C1SalesPrice"];
			self.C2SalesPrice = [Soap getNodeValue: node withName: @"C2SalesPrice"];
			self.C3SalesPrice = [Soap getNodeValue: node withName: @"C3SalesPrice"];
			self.Collected = [Soap getNodeValue: node withName: @"Collected"];
			self.ConstructionCost = [Soap getNodeValue: node withName: @"ConstructionCost"];
			self.Consultant = [Soap getNodeValue: node withName: @"Consultant"];
			self.ContractDate = [Soap getNodeValue: node withName: @"ContractDate"];
			self.DSalesPrice = [Soap getNodeValue: node withName: @"DSalesPrice"];
			self.DisApprove = [[Soap getNodeValue: node withName: @"DisApprove"] boolValue];
			self.ESalesPrice = [Soap getNodeValue: node withName: @"ESalesPrice"];
			self.Estimated = [Soap getNodeValue: node withName: @"Estimated"];
			self.FSalesPrice = [Soap getNodeValue: node withName: @"FSalesPrice"];
			self.FinalPrice = [Soap getNodeValue: node withName: @"FinalPrice"];
			self.GSalesPrice = [Soap getNodeValue: node withName: @"GSalesPrice"];
			self.Garage = [Soap getNodeValue: node withName: @"Garage"];
			self.GranTotal = [Soap getNodeValue: node withName: @"GranTotal"];
			self.IDCia = [Soap getNodeValue: node withName: @"IDCia"];
			self.IDDoc = [Soap getNodeValue: node withName: @"IDDoc"];
			self.IDFloorplan = [Soap getNodeValue: node withName: @"IDFloorplan"];
			self.IDNumber = [Soap getNodeValue: node withName: @"IDNumber"];
			self.IDProject = [Soap getNodeValue: node withName: @"IDProject"];
			self.IDSub = [Soap getNodeValue: node withName: @"IDSub"];
			self.IsShow = [[Soap getNodeValue: node withName: @"IsShow"] boolValue];
			self.ListPrice = [Soap getNodeValue: node withName: @"ListPrice"];
			self.LotCost = [Soap getNodeValue: node withName: @"LotCost"];
			self.NProject = [Soap getNodeValue: node withName: @"NProject"];
			self.NonRefundable = [Soap getNodeValue: node withName: @"NonRefundable"];
			self.OpenPO = [Soap getNodeValue: node withName: @"OpenPO"];
			self.PlanName = [Soap getNodeValue: node withName: @"PlanName"];
			self.Repeated = [[Soap getNodeValue: node withName: @"Repeated"] boolValue];
			self.Reverseyn = [[Soap getNodeValue: node withName: @"Reverseyn"] boolValue];
			self.SalesList = [[wcfArrayOfContractDepositItem newWithNode: [Soap getNode: node withName: @"SalesList"]] object];
			self.SalesPrice = [Soap getNodeValue: node withName: @"SalesPrice"];
			self.Stage = [Soap getNodeValue: node withName: @"Stage"];
			self.SubDivision = [Soap getNodeValue: node withName: @"SubDivision"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"ContractEntryItem"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<Acknowledge>%@</Acknowledge>", (self.Acknowledge)?@"true":@"false"];
		if (self.AdditionalDep != nil) [s appendFormat: @"<AdditionalDep>%@</AdditionalDep>", [[self.AdditionalDep stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.AdministrativeCost != nil) [s appendFormat: @"<AdministrativeCost>%@</AdministrativeCost>", [[self.AdministrativeCost stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Agent != nil) [s appendFormat: @"<Agent>%@</Agent>", [[self.Agent stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<Approve>%@</Approve>", (self.Approve)?@"true":@"false"];
		if (self.BSalesPrice != nil) [s appendFormat: @"<BSalesPrice>%@</BSalesPrice>", [[self.BSalesPrice stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Balance != nil) [s appendFormat: @"<Balance>%@</Balance>", [[self.Balance stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.BasePrice != nil) [s appendFormat: @"<BasePrice>%@</BasePrice>", [[self.BasePrice stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Baths != nil) [s appendFormat: @"<Baths>%@</Baths>", [[self.Baths stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Bedrooms != nil) [s appendFormat: @"<Bedrooms>%@</Bedrooms>", [[self.Bedrooms stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Broker != nil) [s appendFormat: @"<Broker>%@</Broker>", [[self.Broker stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Buyer != nil) [s appendFormat: @"<Buyer>%@</Buyer>", [[self.Buyer stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.C1SalesPrice != nil) [s appendFormat: @"<C1SalesPrice>%@</C1SalesPrice>", [[self.C1SalesPrice stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.C2SalesPrice != nil) [s appendFormat: @"<C2SalesPrice>%@</C2SalesPrice>", [[self.C2SalesPrice stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.C3SalesPrice != nil) [s appendFormat: @"<C3SalesPrice>%@</C3SalesPrice>", [[self.C3SalesPrice stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Collected != nil) [s appendFormat: @"<Collected>%@</Collected>", [[self.Collected stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ConstructionCost != nil) [s appendFormat: @"<ConstructionCost>%@</ConstructionCost>", [[self.ConstructionCost stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Consultant != nil) [s appendFormat: @"<Consultant>%@</Consultant>", [[self.Consultant stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ContractDate != nil) [s appendFormat: @"<ContractDate>%@</ContractDate>", [[self.ContractDate stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.DSalesPrice != nil) [s appendFormat: @"<DSalesPrice>%@</DSalesPrice>", [[self.DSalesPrice stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<DisApprove>%@</DisApprove>", (self.DisApprove)?@"true":@"false"];
		if (self.ESalesPrice != nil) [s appendFormat: @"<ESalesPrice>%@</ESalesPrice>", [[self.ESalesPrice stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Estimated != nil) [s appendFormat: @"<Estimated>%@</Estimated>", [[self.Estimated stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.FSalesPrice != nil) [s appendFormat: @"<FSalesPrice>%@</FSalesPrice>", [[self.FSalesPrice stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.FinalPrice != nil) [s appendFormat: @"<FinalPrice>%@</FinalPrice>", [[self.FinalPrice stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.GSalesPrice != nil) [s appendFormat: @"<GSalesPrice>%@</GSalesPrice>", [[self.GSalesPrice stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Garage != nil) [s appendFormat: @"<Garage>%@</Garage>", [[self.Garage stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.GranTotal != nil) [s appendFormat: @"<GranTotal>%@</GranTotal>", [[self.GranTotal stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.IDCia != nil) [s appendFormat: @"<IDCia>%@</IDCia>", [[self.IDCia stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.IDDoc != nil) [s appendFormat: @"<IDDoc>%@</IDDoc>", [[self.IDDoc stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.IDFloorplan != nil) [s appendFormat: @"<IDFloorplan>%@</IDFloorplan>", [[self.IDFloorplan stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.IDNumber != nil) [s appendFormat: @"<IDNumber>%@</IDNumber>", [[self.IDNumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.IDProject != nil) [s appendFormat: @"<IDProject>%@</IDProject>", [[self.IDProject stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.IDSub != nil) [s appendFormat: @"<IDSub>%@</IDSub>", [[self.IDSub stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<IsShow>%@</IsShow>", (self.IsShow)?@"true":@"false"];
		if (self.ListPrice != nil) [s appendFormat: @"<ListPrice>%@</ListPrice>", [[self.ListPrice stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.LotCost != nil) [s appendFormat: @"<LotCost>%@</LotCost>", [[self.LotCost stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.NProject != nil) [s appendFormat: @"<NProject>%@</NProject>", [[self.NProject stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.NonRefundable != nil) [s appendFormat: @"<NonRefundable>%@</NonRefundable>", [[self.NonRefundable stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.OpenPO != nil) [s appendFormat: @"<OpenPO>%@</OpenPO>", [[self.OpenPO stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.PlanName != nil) [s appendFormat: @"<PlanName>%@</PlanName>", [[self.PlanName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<Repeated>%@</Repeated>", (self.Repeated)?@"true":@"false"];
		[s appendFormat: @"<Reverseyn>%@</Reverseyn>", (self.Reverseyn)?@"true":@"false"];
		if (self.SalesList != nil && self.SalesList.count > 0) {
			[s appendFormat: @"<SalesList>%@</SalesList>", [wcfArrayOfContractDepositItem serialize: self.SalesList]];
		} else {
			[s appendString: @"<SalesList/>"];
		}
		if (self.SalesPrice != nil) [s appendFormat: @"<SalesPrice>%@</SalesPrice>", [[self.SalesPrice stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Stage != nil) [s appendFormat: @"<Stage>%@</Stage>", [[self.Stage stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.SubDivision != nil) [s appendFormat: @"<SubDivision>%@</SubDivision>", [[self.SubDivision stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[wcfContractEntryItem class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.AdditionalDep != nil) { [self.AdditionalDep release]; }
		if(self.AdministrativeCost != nil) { [self.AdministrativeCost release]; }
		if(self.Agent != nil) { [self.Agent release]; }
		if(self.BSalesPrice != nil) { [self.BSalesPrice release]; }
		if(self.Balance != nil) { [self.Balance release]; }
		if(self.BasePrice != nil) { [self.BasePrice release]; }
		if(self.Baths != nil) { [self.Baths release]; }
		if(self.Bedrooms != nil) { [self.Bedrooms release]; }
		if(self.Broker != nil) { [self.Broker release]; }
		if(self.Buyer != nil) { [self.Buyer release]; }
		if(self.C1SalesPrice != nil) { [self.C1SalesPrice release]; }
		if(self.C2SalesPrice != nil) { [self.C2SalesPrice release]; }
		if(self.C3SalesPrice != nil) { [self.C3SalesPrice release]; }
		if(self.Collected != nil) { [self.Collected release]; }
		if(self.ConstructionCost != nil) { [self.ConstructionCost release]; }
		if(self.Consultant != nil) { [self.Consultant release]; }
		if(self.ContractDate != nil) { [self.ContractDate release]; }
		if(self.DSalesPrice != nil) { [self.DSalesPrice release]; }
		if(self.ESalesPrice != nil) { [self.ESalesPrice release]; }
		if(self.Estimated != nil) { [self.Estimated release]; }
		if(self.FSalesPrice != nil) { [self.FSalesPrice release]; }
		if(self.FinalPrice != nil) { [self.FinalPrice release]; }
		if(self.GSalesPrice != nil) { [self.GSalesPrice release]; }
		if(self.Garage != nil) { [self.Garage release]; }
		if(self.GranTotal != nil) { [self.GranTotal release]; }
		if(self.IDCia != nil) { [self.IDCia release]; }
		if(self.IDDoc != nil) { [self.IDDoc release]; }
		if(self.IDFloorplan != nil) { [self.IDFloorplan release]; }
		if(self.IDNumber != nil) { [self.IDNumber release]; }
		if(self.IDProject != nil) { [self.IDProject release]; }
		if(self.IDSub != nil) { [self.IDSub release]; }
		if(self.ListPrice != nil) { [self.ListPrice release]; }
		if(self.LotCost != nil) { [self.LotCost release]; }
		if(self.NProject != nil) { [self.NProject release]; }
		if(self.NonRefundable != nil) { [self.NonRefundable release]; }
		if(self.OpenPO != nil) { [self.OpenPO release]; }
		if(self.PlanName != nil) { [self.PlanName release]; }
		if(self.SalesList != nil) { [self.SalesList release]; }
		if(self.SalesPrice != nil) { [self.SalesPrice release]; }
		if(self.Stage != nil) { [self.Stage release]; }
		if(self.SubDivision != nil) { [self.SubDivision release]; }
		[super dealloc];
	}

@end
