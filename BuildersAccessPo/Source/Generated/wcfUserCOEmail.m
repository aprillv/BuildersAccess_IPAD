/*
	wcfUserCOEmail.h
	The implementation of properties and methods for the wcfUserCOEmail object.
	Generated by SudzC.com
*/
#import "wcfUserCOEmail.h"

@implementation wcfUserCOEmail
	@synthesize Email = _Email;
	@synthesize Emailcontent = _Emailcontent;
	@synthesize IdDoc = _IdDoc;
	@synthesize IdProject = _IdProject;
	@synthesize NProject = _NProject;
	@synthesize Result = _Result;
	@synthesize ToEmail = _ToEmail;
	@synthesize Toemailcc = _Toemailcc;

	- (id) init
	{
		if(self = [super init])
		{
			self.Email = nil;
			self.Emailcontent = nil;
			self.IdDoc = nil;
			self.IdProject = nil;
			self.NProject = nil;
			self.Result = nil;
			self.ToEmail = nil;
			self.Toemailcc = nil;

		}
		return self;
	}

	+ (wcfUserCOEmail*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (wcfUserCOEmail*)[[[wcfUserCOEmail alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Email = [Soap getNodeValue: node withName: @"Email"];
			self.Emailcontent = [Soap getNodeValue: node withName: @"Emailcontent"];
			self.IdDoc = [Soap getNodeValue: node withName: @"IdDoc"];
			self.IdProject = [Soap getNodeValue: node withName: @"IdProject"];
			self.NProject = [Soap getNodeValue: node withName: @"NProject"];
			self.Result = [Soap getNodeValue: node withName: @"Result"];
			self.ToEmail = [Soap getNodeValue: node withName: @"ToEmail"];
			self.Toemailcc = [Soap getNodeValue: node withName: @"Toemailcc"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"UserCOEmail"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Email != nil) [s appendFormat: @"<Email>%@</Email>", [[self.Email stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Emailcontent != nil) [s appendFormat: @"<Emailcontent>%@</Emailcontent>", [[self.Emailcontent stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.IdDoc != nil) [s appendFormat: @"<IdDoc>%@</IdDoc>", [[self.IdDoc stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.IdProject != nil) [s appendFormat: @"<IdProject>%@</IdProject>", [[self.IdProject stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.NProject != nil) [s appendFormat: @"<NProject>%@</NProject>", [[self.NProject stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Result != nil) [s appendFormat: @"<Result>%@</Result>", [[self.Result stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ToEmail != nil) [s appendFormat: @"<ToEmail>%@</ToEmail>", [[self.ToEmail stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Toemailcc != nil) [s appendFormat: @"<Toemailcc>%@</Toemailcc>", [[self.Toemailcc stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[wcfUserCOEmail class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.Email != nil) { [self.Email release]; }
		if(self.Emailcontent != nil) { [self.Emailcontent release]; }
		if(self.IdDoc != nil) { [self.IdDoc release]; }
		if(self.IdProject != nil) { [self.IdProject release]; }
		if(self.NProject != nil) { [self.NProject release]; }
		if(self.Result != nil) { [self.Result release]; }
		if(self.ToEmail != nil) { [self.ToEmail release]; }
		if(self.Toemailcc != nil) { [self.Toemailcc release]; }
		[super dealloc];
	}

@end
